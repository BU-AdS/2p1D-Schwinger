(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    228832,       4820]
NotebookOptionsPosition[    225348,       4696]
NotebookOutlinePosition[    225755,       4714]
CellTagsIndexPosition[    225712,       4711]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Efective", " ", "action", " ", "\[IndentingNewLine]", " ", "row", " ", 
    "and", " ", "columns", " ", "for", " ", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "        ", "th_x", "_", "1", "      ", "th_y", 
    "_", "1", "   ", "th_x", "_", "2", "     ", "th_y", "_", "2", 
    "\[IndentingNewLine]", "   ", "\[IndentingNewLine]", "th_x", "_", "1", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "th_y", "_", "1"}], ",", 
   " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"th_x", "_", "2"}], ",", " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"th_y", "_", "2"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]",
   "*)"}]], "Input",
 CellChangeTimes->{{3.743514158010408*^9, 3.7435141928745947`*^9}, {
   3.743514403163384*^9, 3.743514454415604*^9}, {3.743514554233941*^9, 
   3.743514555809267*^9}, {3.743514620247422*^9, 3.743514780720558*^9}, 
   3.743541789077248*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"kh", "[", "k_", "]"}], " ", "=", "  ", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"i", " ", "k"}], "]"}], " ", "-", "1"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kc", "[", "k_", "]"}], "  ", "=", " ", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "i"}], " ", "k"}], "]"}], "  ", "-", " ", 
     "1"}]}]}]}]], "Input",
 CellChangeTimes->{{3.743514269082388*^9, 3.7435143053202543`*^9}, {
   3.743514906402108*^9, 3.743514917435223*^9}, {3.743514998582679*^9, 
   3.743515041290373*^9}, 3.74351568874794*^9, {3.743516632577634*^9, 
   3.743516641055649*^9}, {3.7435169332353*^9, 3.743516934007922*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"i", " ", "k"}]]}]], "Output",
 CellChangeTimes->{
  3.743518376854725*^9, {3.74351854381664*^9, 3.743518573534849*^9}, 
   3.7435187451059923`*^9, 3.743519096118971*^9, 3.743519226249712*^9, 
   3.743519258777937*^9, 3.743523309648875*^9, 3.743523486496874*^9, 
   3.743523601331587*^9, 3.743523692330484*^9, 3.743524033900114*^9, 
   3.7435274984681597`*^9, 3.743535609863985*^9, 3.743541575891307*^9, 
   3.7435419201009693`*^9, 3.743542008193667*^9, 3.7435425100280447`*^9, 
   3.743542732761271*^9, 3.7435487053504887`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "i"}], " ", "k"}]]}]], "Output",
 CellChangeTimes->{
  3.743518376854725*^9, {3.74351854381664*^9, 3.743518573534849*^9}, 
   3.7435187451059923`*^9, 3.743519096118971*^9, 3.743519226249712*^9, 
   3.743519258777937*^9, 3.743523309648875*^9, 3.743523486496874*^9, 
   3.743523601331587*^9, 3.743523692330484*^9, 3.743524033900114*^9, 
   3.7435274984681597`*^9, 3.743535609863985*^9, 3.743541575891307*^9, 
   3.7435419201009693`*^9, 3.743542008193667*^9, 3.7435425100280447`*^9, 
   3.743542732761271*^9, 3.743548705361083*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"kkabs", " ", "[", "k_", "]"}], " ", ":=", "  ", 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", " ", "k", "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kxy", "[", 
     RowBox[{"kx_", ",", "ky_"}], "]"}], " ", ":=", " ", 
    RowBox[{"1", " ", "-", " ", 
     RowBox[{"Cos", "[", "kx", "]"}], " ", "-", " ", 
     RowBox[{"Cos", "[", "ky", "]"}], " ", "+", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"kx", " ", "-", " ", "ky"}], "]"}]}]}], "  ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kxycom", "[", 
     RowBox[{"kx_", ",", "ky_"}], "]"}], "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", " ", "kx", "]"}], " ", "+", " ", 
       RowBox[{"I", " ", 
        RowBox[{"Sin", "[", "kx", "]"}]}], " ", "-", "1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", " ", "ky", "]"}], " ", "-", " ", 
       RowBox[{"I", " ", 
        RowBox[{"Sin", "[", "ky", "]"}]}], " ", "-", "1"}], 
      ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.743517360427928*^9, 3.7435174236729727`*^9}, {
  3.743517553379446*^9, 3.74351762774807*^9}, {3.7435183329978228`*^9, 
  3.74351833810756*^9}, {3.743519219309637*^9, 3.74351922062691*^9}, {
  3.743522764541313*^9, 3.7435228344404078`*^9}, {3.743523297762594*^9, 
  3.74352330225806*^9}, {3.743523593095827*^9, 3.743523597734086*^9}, {
  3.743523686238853*^9, 3.743523688436924*^9}, {3.743541805283382*^9, 
  3.74354183277975*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"Cos", "[", "kx", "]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", "kx", "]"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"Cos", "[", "ky", "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", "ky", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.743522835599111*^9, {3.743523303374673*^9, 3.743523309757492*^9}, 
   3.743523486605153*^9, 3.743523537286175*^9, 3.743523601425494*^9, 
   3.7435236924248857`*^9, 3.7435240340255013`*^9, 3.743527498567296*^9, 
   3.7435356099766617`*^9, 3.743541575982313*^9, 3.743541920197157*^9, 
   3.743542008290779*^9, 3.7435425101203833`*^9, 3.743542732834126*^9, 
   3.743548705464999*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GEterm", "=", "               ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
     "1", "                     ", ",", "    ", "0", "             ", ",", 
      RowBox[{"-", "1"}], "                       ", ",", "0"}], 
     "                      ", "}"}], ",", "\[IndentingNewLine]", 
    "                                ", 
    RowBox[{"{", "  ", 
     RowBox[{
     "0", "                             ", ",", "   ", "1", 
      "                ", ",", " ", "0", "                       ", ",", " ", 
      
      RowBox[{"-", "1"}]}], "                      ", "}"}], ",", 
    "\[IndentingNewLine]", "                                ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"-", "1"}], "                              ", ",", " ", "0", 
      "                    ", ",", " ", "1", "                        ", ",", 
      "0"}], "                      ", "}"}], ",", "\[IndentingNewLine]", 
    "                                ", 
    RowBox[{"{", 
     RowBox[{"0", "                              ", ",", "  ", 
      RowBox[{"-", "1"}], "                 ", ",", " ", "0", 
      "                       ", ",", "   ", "1"}], "                    ", 
     "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"                          "}]}], "Input",
 CellChangeTimes->{{3.7435142226352577`*^9, 3.7435142503851557`*^9}, {
   3.743514484199606*^9, 3.743514507311103*^9}, {3.74351479289624*^9, 
   3.7435148836539297`*^9}, {3.743514975361339*^9, 3.74351499273409*^9}, {
   3.743515081361704*^9, 3.743515083745294*^9}, {3.743515122479209*^9, 
   3.743515124998733*^9}, {3.743515163705181*^9, 3.743515200237193*^9}, {
   3.743515231382221*^9, 3.743515243301553*^9}, {3.74351527898837*^9, 
   3.743515495610059*^9}, {3.7435161224668016`*^9, 3.7435161254249697`*^9}, {
   3.7435161735686073`*^9, 3.743516212013255*^9}, {3.743516258005526*^9, 
   3.743516406592008*^9}, {3.7435164453100147`*^9, 3.74351647835117*^9}, {
   3.7435165217253942`*^9, 3.743516522349278*^9}, {3.743523548417948*^9, 
   3.743523550024164*^9}, {3.743535785525074*^9, 3.7435358147373333`*^9}, 
   3.743535954256488*^9, {3.743541456844561*^9, 3.7435415201215563`*^9}, {
   3.743541570694003*^9, 3.7435415712755327`*^9}, {3.743542057936927*^9, 
   3.743542099062151*^9}},
 FontSize->12],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.743542103762369*^9, 3.743542510203952*^9, 
  3.74354273291749*^9, 3.743548705581077*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "GEterm", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "1", "0", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], "0", "1", "0"},
     {"0", 
      RowBox[{"-", "1"}], "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7435425103033457`*^9, 3.7435427329837103`*^9, 
  3.7435487056976547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mass", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.743541711126251*^9, 3.7435417450608892`*^9}, {
  3.74354187813774*^9, 3.7435418792477703`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.74354248990139*^9, 3.743542510385953*^9}, 
   3.743542733045899*^9, 3.743548705814665*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GBPlaq", "[", 
    RowBox[{"kx_", ",", "ky_"}], "]"}], "  ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "   ", 
      RowBox[{
       RowBox[{"kkabs", "[", "ky", "]"}], "                            ", ",",
        " ", 
       RowBox[{"-", "  ", 
        RowBox[{"kxy", "[", 
         RowBox[{"kx", ",", "ky"}], "]"}]}]}], "                    ", "}"}], 
     ",", "\[IndentingNewLine]", "                                  ", 
     RowBox[{"{", "   ", 
      RowBox[{
       RowBox[{"-", "  ", 
        RowBox[{"kxy", "[", 
         RowBox[{"kx", ",", "ky"}], "]"}]}], "                           ", 
       ",", "   ", 
       RowBox[{"kkabs", "[", "kx", "]"}]}], "                          ", 
      "}"}]}], "}"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.743517763140115*^9, 3.743517822700302*^9}, {
   3.743518255153068*^9, 3.7435182569591513`*^9}, 3.74351853767258*^9, {
   3.743522905465392*^9, 3.7435229661708097`*^9}, 3.7435235090789137`*^9, {
   3.743523572584673*^9, 3.743523574502842*^9}, {3.743542190425119*^9, 
   3.743542192862818*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"kx", "-", "ky"}], "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"kx", "-", "ky"}], "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}]}], ",", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.743523601675144*^9, 3.743523692692816*^9, 
  3.743524034313834*^9, 3.743527498850095*^9, 3.7435356103105593`*^9, 
  3.743541576515215*^9, 3.743541920648241*^9, 3.74354200870711*^9, 
  3.743542510468925*^9, 3.743542733119103*^9, 3.743548705930942*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GBPlaqH", "[", 
   RowBox[{"kx_", ",", "ky_"}], "]"}], "  ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "   ", 
     RowBox[{
      RowBox[{"kkabs", "[", "ky", "]"}], "                            ", ",", 
      " ", 
      RowBox[{"-", "  ", 
       RowBox[{"kxycom", "[", 
        RowBox[{"kx", ",", "ky"}], "]"}]}]}], "                 ", "}"}], ",",
     "\[IndentingNewLine]", "                                  ", 
    RowBox[{"{", "   ", 
     RowBox[{
      RowBox[{"-", "  ", 
       RowBox[{"kxycom", "[", 
        RowBox[{"ky", ",", "kx"}], "]"}]}], "                           ", 
      ",", "   ", 
      RowBox[{"kkabs", "[", "kx", "]"}]}], "                         ", 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.743542204534568*^9, 3.74354220685417*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "kx", "]"}]}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", "ky", "]"}]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "kx", "]"}]}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", "ky", "]"}]}]}], ")"}]}], ",", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.743518618651833*^9, 3.743518640906363*^9}, 
   3.7435186948959618`*^9, 3.743518745349166*^9, 3.743519096322032*^9, 
   3.743519226456942*^9, 3.74351925894991*^9, 3.743522973664815*^9, 
   3.743523310124569*^9, {3.743523486886705*^9, 3.7435235158558826`*^9}, {
   3.7435235807501497`*^9, 3.743523601758019*^9}, 3.743523692768941*^9, 
   3.743524034413986*^9, 3.743527498934307*^9, 3.743535610414482*^9, 
   3.7435415766033*^9, 3.743541920730729*^9, 3.743542008791349*^9, 
   3.743542510569563*^9, 3.7435427332009687`*^9, 3.743548706047028*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"i", " ", "kx"}]]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "ky"}]]}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "i"}], " ", "kx"}]]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "ky"}]]}], ")"}]}], ",", 
      RowBox[{"2", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "kx", "]"}]}]}]}], "}"}]}], "}"}], "]"}]], "Input",\

 NumberMarks->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"2", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "ky", "]"}]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "kx"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "ky"}]]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "kx"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "ky"}]]}], ")"}]}], 
      RowBox[{"2", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "kx", "]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.743527676865168*^9, 3.743535610497994*^9, 
  3.7435415766828403`*^9, 3.74354192083142*^9, 3.743542008874523*^9, 
  3.7435425106525393`*^9, 3.7435427332667103`*^9, 3.743548706145438*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GBterm", "[", 
   RowBox[{"kx_", ",", "ky_"}], "]"}], " ", "=", " ", 
  RowBox[{"ArrayFlatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"GBPlaq", "[", 
        RowBox[{"kx", ",", "ky"}], "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", " ", 
      RowBox[{"0", ",", " ", 
       RowBox[{"GBPlaq", "[", 
        RowBox[{"kx", ",", "ky"}], "]"}]}], "}"}]}], "}"}], "]"}], 
  "  "}]], "Input",
 CellChangeTimes->{{3.743518019525565*^9, 3.7435180383802357`*^9}, 
   3.743518085490438*^9, {3.743518147087243*^9, 3.743518192257641*^9}, {
   3.7435186531311207`*^9, 3.74351865552957*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"kx", "-", "ky"}], "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"kx", "-", "ky"}], "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}]}], ",", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}], ",", "0", ",", "0"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"kx", "-", "ky"}], "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"kx", "-", "ky"}], "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}]}], ",", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.743518745434396*^9, 3.7435190964033403`*^9, 
  3.743519226542758*^9, 3.743519259028243*^9, 3.743523311086502*^9, 
  3.743523486965475*^9, 3.74352360184102*^9, 3.7435236928539352`*^9, 
  3.743524034712022*^9, 3.743527499016362*^9, 3.743535610580772*^9, 
  3.743541576801849*^9, 3.743541920917769*^9, 3.743542008961532*^9, 
  3.743542510735756*^9, 3.743542733334581*^9, 3.743548706296548*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Gmatrix", "[", 
   RowBox[{"kx_", ",", "ky_"}], "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"GBterm", "[", 
    RowBox[{"kx", ",", "ky"}], "]"}], " ", "+", " ", "GEterm", " ", "+", " ", 
   "Mass"}]}]], "Input",
 CellChangeTimes->{{3.7435182434943333`*^9, 3.7435182971361647`*^9}, {
  3.743523557239743*^9, 3.743523558580394*^9}, {3.743541865673697*^9, 
  3.743541873160046*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"kx", "-", "ky"}], "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}]}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"kx", "-", "ky"}], "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}]}], ",", 
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}], ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", 
     RowBox[{"3", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"kx", "-", "ky"}], "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"kx", "-", "ky"}], "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}]}], ",", 
     RowBox[{"3", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.743518745516304*^9, 3.743518792524303*^9, 
  3.7435190964869843`*^9, 3.7435192266255417`*^9, 3.743519259097432*^9, 
  3.743523311385025*^9, 3.7435234871054792`*^9, 3.743523601928913*^9, 
  3.743523692929735*^9, 3.743524034816882*^9, 3.743527499100211*^9, 
  3.7435356106647367`*^9, 3.743541576882265*^9, 3.743541921003724*^9, 
  3.743542009112164*^9, 3.743542510815922*^9, 3.7435427334004593`*^9, 
  3.7435487063967257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Gmatrix", "[", 
     RowBox[{"kx", ",", "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"kx", ",", "0", ",", "2"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.74352026497996*^9, 3.743520268434816*^9}, {
  3.7435219237113733`*^9, 3.743521969939786*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     InterpretationBox[
      RowBox[{"2", "+", 
       SuperscriptBox["kx", "2"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "kx", "]"}], "3"],
        SeriesData[$CellContext`kx, 0, {}, 0, 3, 1],
        Editable->False]}],
      SeriesData[$CellContext`kx, 0, {2, 0, 1}, 0, 3, 1],
      Editable->False], ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", 
     InterpretationBox[
      RowBox[{"1", "+", 
       SuperscriptBox["kx", "2"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "kx", "]"}], "3"],
        SeriesData[$CellContext`kx, 0, {}, 0, 3, 1],
        Editable->False]}],
      SeriesData[$CellContext`kx, 0, {1, 0, 1}, 0, 3, 1],
      Editable->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.743521972867918*^9, 3.743523311972933*^9, 
  3.7435234873385563`*^9, 3.743523602001384*^9, 3.743523693018085*^9, 
  3.743524034911777*^9, 3.743527499171959*^9, 3.743535610747052*^9, 
  3.7435415769816236`*^9, 3.74354192108477*^9, 3.743542009194508*^9, 
  3.74354251090245*^9, 3.743542733466989*^9, 3.74354870649695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GBtermH", "[", 
   RowBox[{"kx_", ",", "ky_"}], "]"}], " ", "=", " ", 
  RowBox[{"ArrayFlatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"GBPlaqH", "[", 
        RowBox[{"kx", ",", "ky"}], "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", " ", 
      RowBox[{"0", ",", " ", 
       RowBox[{"GBPlaqH", "[", 
        RowBox[{"kx", ",", "ky"}], "]"}]}], "}"}]}], "}"}], "]"}], 
  "  "}]], "Input",
 CellChangeTimes->{{3.743523991074943*^9, 3.743523997834426*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "kx", "]"}]}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", "ky", "]"}]}]}], ")"}]}], ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "kx", "]"}]}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", "ky", "]"}]}]}], ")"}]}], ",", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}], ",", "0", ",", "0"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "kx", "]"}]}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", "ky", "]"}]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "kx", "]"}]}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", "ky", "]"}]}]}], ")"}]}], ",", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.743524035090947*^9, 3.7435274992494802`*^9, 
  3.7435356108599977`*^9, 3.743541577068905*^9, 3.743541921168144*^9, 
  3.743542009277658*^9, 3.74354251108512*^9, 3.743542733534264*^9, 
  3.743548706597335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GmatrixH", "[", 
   RowBox[{"kx_", ",", "ky_"}], "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"GBtermH", "[", 
    RowBox[{"kx", ",", "ky"}], "]"}], " ", "+", " ", "GEterm", " ", "+", " ", 
   "Mass"}]}]], "Input",
 CellChangeTimes->{{3.743524011442247*^9, 3.743524028774618*^9}, {
  3.743541887319867*^9, 3.7435418895915413`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "kx", "]"}]}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", "ky", "]"}]}]}], ")"}]}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "kx", "]"}]}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", "ky", "]"}]}]}], ")"}]}], ",", 
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}], ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", 
     RowBox[{"3", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "kx", "]"}]}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", "ky", "]"}]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "kx", "]"}]}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", "ky", "]"}]}]}], ")"}]}], ",", 
     RowBox[{"3", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7435240352912807`*^9, 3.743527499321663*^9, 3.743535610957645*^9, 
   3.743541577151908*^9, 3.743541921250832*^9, {3.743541986988353*^9, 
   3.743542009361784*^9}, 3.7435425111876583`*^9, 3.743542733600959*^9, 
   3.7435487066956387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DetReal", "[", 
   RowBox[{"kx_", ",", "ky_"}], "]"}], " ", "=", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{"Det", "[", 
    RowBox[{"GmatrixH", "[", 
     RowBox[{"kx", ",", "ky"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.743542282086399*^9, 3.743542335315296*^9}}],

Cell[BoxData[
 RowBox[{"95", "-", 
  RowBox[{"90", " ", 
   RowBox[{"Cos", "[", "kx", "]"}]}], "-", 
  RowBox[{"5", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "3"]}], "+", 
  SuperscriptBox[
   RowBox[{"Cos", "[", "kx", "]"}], "4"], "-", 
  RowBox[{"90", " ", 
   RowBox[{"Cos", "[", "ky", "]"}]}], "+", 
  RowBox[{"40", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   RowBox[{"Cos", "[", "ky", "]"}]}], "+", 
  RowBox[{"60", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   RowBox[{"Cos", "[", "ky", "]"}]}], "-", 
  RowBox[{"20", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "3"], " ", 
   RowBox[{"Cos", "[", "ky", "]"}]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "4"], " ", 
   RowBox[{"Cos", "[", "ky", "]"}]}], "-", 
  RowBox[{"5", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"60", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"]}], "-", 
  RowBox[{"63", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "3"]}], "-", 
  RowBox[{"20", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "3"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "3"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "3"]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "3"]}], "+", 
  SuperscriptBox[
   RowBox[{"Cos", "[", "ky", "]"}], "4"], "-", 
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "4"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "4"]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "4"]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "4"]}], "-", 
  RowBox[{"25", " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "+", 
  RowBox[{"10", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "+", 
  RowBox[{"60", " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "-", 
  RowBox[{"20", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "-", 
  RowBox[{"43", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "+", 
  RowBox[{"6", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "+", 
  RowBox[{"12", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "+", 
  RowBox[{"8", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"]}], "+", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "kx", "]"}], "4"], "-", 
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "4"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "4"]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "4"]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "4"]}], "-", 
  RowBox[{"25", " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"60", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "-", 
  RowBox[{"43", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"10", " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "-", 
  RowBox[{"20", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "3"], " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "4"], " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "-", 
  RowBox[{"8", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"12", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "-", 
  RowBox[{"23", " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"6", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"6", " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"8", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "-", 
  RowBox[{"8", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", "ky", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "ky", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "2"]}], "+", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "ky", "]"}], "4"], "-", 
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "4"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "4"]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "4"]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "4"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "4"]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "4"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "4"]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "kx", "]"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "ky", "]"}], "4"]}]}]], "Output",
 CellChangeTimes->{3.743542337098928*^9, 3.7435425112842617`*^9, 
  3.743542733689514*^9, 3.7435487067972383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"DetReal", "[", 
    RowBox[{"kx", ",", "ky"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"kx", ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ky", ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.743542359253139*^9, 3.7435424075214376`*^9}},
 NumberMarks->False],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXn811P2x0uSEIZs7QtJWdrT5t4WWUZKizGYGVSMLNkVKUuWki2jEApl
38aIKN4fv0Hom6TFxHdUmja+UlKpvvSbmc7zfOb98r398318X93vveeee+65
55x77nk3PG9o38G7VKpUad0elSpV+ffP2fdUO3h7w+oFfi7/eceOHeH0eFuN
5h0+H1vV8bMfPOnx504bEI+/89Qz/7axsuNtd790x6Of9o277/evzfXeLM/A
D+gy9bOF359q/Wxy/Jyz/rbxq24nWvsyx68dteOPi8q6GV5a7Ofb0w/9qH2I
lewf+F3/oXNHZ9oHbW/9B+3f6AkV01MelH6bb9T5Gn+i8sd+j8pPfoevZ1l7
fufns/XGTj/zz/2dz+Bzx2+Z/6dNpzmfwZ+8bPncyuf1cj6DP7H/8IuP+rqn
8xm8/cqzjpr7WlfnM3jpRQ1m/Ief8Bn88Qf2/sMppR2dz9oePmv/8LliesqD
0g+fdb7wWfkDn5Wf8Bn+tcuvl+P0z+/8bHRT67sf79fb+Qze8+Xvf57f+STn
M/gLPx391uWdujufwU+se8PI/5FPx7fMW31szTbtnc/g40a9Oe/pE9s6n7U9
fNb+4XPF9JQHpR8+63zhs/IHPis/4TN8qpnb71Udfyy/vo53Nnr4nZ+T/zF+
1dSPuzufXd7H3PjH/5E3x++d8fcB53zWxvkM3mzM9CZPLjzG+ez0fLrng0On
HOl81vbwWfuHzxXTUx6Ufvis84XPyh/4rPzM641N2emmr/J6Y1P2lO2vvN7Y
lIk8ZOD3Gv15vbEpm7H3yPtPr9RG9Mam7Oqnl3U+68Zmojc2ZXfcWbXO3s81
Er2xKXvrvo4Xn9OsgeiNYvu83ij2n9cbSk95UPrzeqM437zeKPInrzeK/MzL
c1l2Ve68qOp4R9NveXkuy7rl9jvyXJaNz8uP41fl+Fnm+G5PXHFCk8PqizyX
ZT2/GF31l2r7izyXZSefe8VpX0zaW+S52D4vz8X+8/Ks9JQHpT8vz8X55uW5
yJ+8PBf5medzabafndd5PpdmX9n5kudzafZjTh/C59Ksue3fPJ9Ls5vz8ub4
aTn+lDpet9qM2OTvuwifS7Nz9uix57BG20Kez8X2eT4X+8/zWekpD0p/ns/F
+eb5XORPns9FfsJn5jHe7CX4DD7Fznf4DJ4/j8oz8CdMf8Jn8Ndz+73M8a55
+XR8sPGzUoX/1juftT181v7hc8X0lDsO/fBZ5wuflT/wWfkp8hwS8hwS8hwS
8hwS8hwS8hwS8hwS8hwS8hwS8hwS8hwS8hwS8hwS8hwS8hxUnqEroZ9DQj+H
hH4OCf0cEvo5JPRzSOjnkNDPIaGfQ0I/h4R+Dgn9HBL6OST0c1D9zPgJeyMk
7I2QsDdCwt4ICXsjJOyNkLA3QsLeCAl7IyTsjZCwN0LC3ggJeyMk7I1Qsb1R
HhL2c0jYzyFhP4eE/RwS9nNI2M8hYT+HhP0cEvZzSNjPIWE/h4T9HBL2c0jY
z0HtZ/pL+IMx4Q/GhD8YE/5gTPiDMeEPxoQ/GBP+YEz4gzHhD8aEPxgT/mBM
+IMx4Q9G9Qf5u0R8IybiGzER34iJ+EZMxDdiIr4RE/GNmIhvxER8IybiGzER
34iJ+EZMxDdiIr4RNb7B/yfidTERr4uJeF1MxOtiIl4XE/G6mIjXxUS8Libi
dTERr4uJeF1MxOtiIl4XE/E65+dTpz7U9MLTqxX4+fLzrXv/9YMB8fySWScd
n1Vx/IDFLz/7wI5+3p7/B2e9+P+GXdpcfUyV070ffj43tUGb+37bNx568rIh
DZtW8vZjhvd752/b+zhO+1f//vCfmi9Ev23NaL/hrK/a79ngt47T/u5tf1vz
UN8TjT8bvH3/fV8ou6r68Y7TvvZenw755D74v9Lbn//P/7tpyavR+F/i+POP
Nv6yqH9Wej9///KNB4vrXuJx3euP3HDzkru6gAfth/b089ZZI5s/u+pYb6/9
2LghQWfQfmivdBofQoI/QfljfA4J/gflv61jTKxv1PW132NC3mJCPqPKFe3h
W32TQ+Re5ZP2Ks/oGfCmd41/t9/p/Vw/gNfbOGbFmydH1w/gnd+9usFdQzu6
fvD2fXcfUWXQsa4ftD37V8eFbvbHWOMn7cDhJ3IOvvZfhSH/K7fgdQ45+br+
C9u6HILXuH/ulIk9WrlcKY5caT+si9IDn5V+5sU+3mxyxbzAx8u+Bl85875B
jdu28XmBf/bGxmN633Ck7Met2Zt9x02uNL2J7K8izry0H+al9OTlrUg/84Le
021/MS/wg21/gTOPd2yfwi/ar7J1BKf9AcZ/6KD9cuMPOO0X2rxox8+jr+s9
/qnPj3B+gj/4xeudawxo4O35/4cNh8/8/6BXmzy0YPZB3g8/R/zrnTWvjP6N
8z/RPui48F/5Bv+Vz/CfcS8yPZm301ZmLy2o89EtLwZvzzxeNP3MuoDPNL0K
/8F3s30Bn8Fn5OStzPmwec9Wj3VYd5DTTfshxgd+p/3iZ6o+MOW+qs5P/n+N
4fBT29OOnz1erHrI2K0/0i6k1iXVXsflvFB5ANd5cV6oHIIr3zgvVM7Blf/I
ie4j5ETlgfa6vrRXecj7rSXZ0OFV6+w7uJPKT6B93v8tya60c1zkKiTkKiTk
KsAfkZ+Ql59SX/cqzb6Zccqq8iDyE1jHvP9bkg284oZhw674IYj8BOQh7xcX
+xf5CQn5CSo/Sr/IQ1B5UP7k/eXiusj6Op/zfnRxXWTdQ2Ldg64780OuZN2D
rjvtVc+Dqz4HV70NntfDvu5B15327HdZ96DrTvu8PvF1D7ru2l70jI8resPp
F/3g8xU94PyRdQ+67spnWfeg667rKOdF4LzI+90rw3s1nnz+58v3EL97ZdjQ
6Zr33v+livNN2+f97pWBc0HOwSDnr+Oc1/ANnHMfvoGvytmBxfVhXnLOBjln
sUNCwp7x9mI/OP1iJ4RB+fMuVIyXOt4idtk2f4/aEhfaEA49a8CwERcdqvZA
UHsAPiXszIBdJ/ZkSNiTIWFPhoQ96f1AHzh2rNiZIWFnBrUzWeeEXxCxw8X+
jwn7Pybs/5iw/70fXw/D8TvEL4gJvyCqX8Df4ZdJPCGK30c8ISbiGN6PxBmc
HolLRPxWiTNE/FyJS0T8YokzRPxoiUtE/G6JJ0SNJ4CLX+/9JOIAUeIJ3l7i
GCExbtD2Eh+IEj8JSo/EGXy+EjdQfgblp8QNdL2irpfEB1ROYkKuosqJxB9c
rjgXwJ/+4/zb6x84QPRM9SjxB29P/IFzBPzC6W+e3Pip4/wcAX+icfVvh175
q/hSzMeXSoP2I3GkmI8jVY1Kv8RJosZJdF4yX4+3CH8Kyh/+/xnD83ZRVY97
5O2iqoVmp/288LE/9RG7qGqhb+vxN729+8liF1UtbJpwe98q+/dQPhfgT94u
qlp41s5B4X9B+U/7y8zeEP4XlP/aPm8XFcfN20VF+vN2UXG+ebuoyB9ZX+d/
3i6qqvGlqOvC76zDkdY//ix44yZ3t934k8e1HG9x54GTZz/Y2vkJfvlfJ7w+
b0FL55u2h34dNx//35qdYXzIx+23ZqdO2uO98YtbSNx+aza+/Nm265c0lbj9
1qzhdw9M2LHjMInbF9vn4+rFcfP3axuyzbZeef+uLKtjccK8f1eWNTK+5f27
MqG/zOMq2Dl5v+/f/Riev3fbkGEv5f2+smy72Zn5+7gN2c3X31P3+9cPVLtL
+nG/zeeb939Ls8Em/3k+lGYdLM6Z50Np1tzWPc+H0myC8T8/39KsW84OdDs8
w67Oz7c0m1OxfZ7l7fMSb7/hiP/1a9xuz/J2O35usX3ezy2Om/dzi/Tn/dzi
fPN+bpE/Yrdnarcrn/P+bHFdWC/48bzpN9YLvJbFq1kv8KG2f1kv8MNtH7Fe
4HeZXEE3+L+E/+Cv5/3QoDh81n7gs44Ln5VO+Kzzgp/KB/ipfBP5Dwn5Dwn5
Dwn5Dwn5D90q3NelYU5ePh3Py7PLbUjIbUjIbUjIbUjIrc9L5DMk5NP5lqen
LGzPx0sdR+/l6SkL6M88Pf9ub/o2T09ZQD+LPg+bxX5QP1T0Z7g5J+fF+Bb9
yPkV8ueXn1MhcU6FxDnl7ZkPOHyQ8yvo+QWf8ue7n+MxcY7HxDnu7aEHHDtB
zveo5zvro/df/F3CbowJuzEm7MaYsBuj2o3Qk7+nc7sxqt1I+/x9n9uNUe1G
7V/sRmlf5u3r5eTW7cmYsCdjwp6MCXsyqj2p6yL2pK5X1PVqN7RPg1addy/w
s+VJLZZc1RA/aFYGPu+HK78r+qGzQgrH79jnvRp7XdW4C/3HVP+by67suve0
XQvV7r3q9JO+6OD9KL6Tb8szft4ztMEhb8+o7vjOeS3K7m3z1wdaXsX8FwX+
/wnBaX/B493/Ovkv28OBR3/dYspluxWga4+BS+etXtspCh7AmQ/t5xof6Ff7
hw7a79Xo1tonD68UBQ/gtKOfE2rf/PZVXTYH2iVw7/+ibmt/mdZ+g+IB3MYN
Kb7xdzdb/4IHcFsnp3cXWy/BAzjyoHwTPIDL+gboFHkIyAN/r/OVdQ+si8hJ
QE7ycelZoYbJM/zS9swHfNf8OgbF+V3pl/0Ydb+YPEbkkP4TOPs3zhM+a//s
W8avN7DnojdanO70sA/GP75iQsdni3qDc2Dtqf1/3L5xgI+regC+8XfXfvKP
546q7f64488OGnPt4UO8fdD20E3/dYxO5k/7iUYneg8cOulH58Xv0Dtl40kf
/YdveT1Qkr3W6dtHD+3bGTkvJOTf+znmlY77XLuqo9MBfo3NK68HSrKJnXqv
qv2Xys63xH709udPmHPfye1/CiL/CT1Qkl2zddyBn+63UdoX8fx+L/aPvCb0
WFD60QPKh7x+KMlOPaXliR8d19HXMaGHo66L7NOshpw7yue8ninJnjJ5k3UP
9C/rGIT+QkK/FVSPyboHocfvJZ/Ky3+m+krkJCTkxPWznCMhcY4o7v0n5MRx
OUdCxedISUjIj593IifOZ1n3IPvR9Z+cy1H5zPryd5+NyN4/vlVxv/N36A3W
l/bn/7nQbHuv/r5eyB36Bz1IP6JnvB/0DOsIXj5n9aR/HhlUT0b0HjjtHzE+
iD0WxR7zOPZnN33Z+74JxfYV466Ho+phHVf0s9PJ+uq8xD6MnAvIh46LPCj/
Rc/7eoHr+jIe7eVci7ou4PCHdZRzxHGRn4LQ4+cm9IhcFZgX8gN+2cn1z+08
otgPf3eRtRf5Kaj8gMt6ebx9aY2Gpy18uYvaFYWEXaG495OQq4LKFf28ZOcm
9DAv9jvtwfvZuSBy6PMSeSvk5a0kJMYNOq7IW0HlTdcRnPleaeuFnCTWMeo6
0o713LVkJ/15/3pRttLWS+zPLGF/Zgn70/H8eVGa1W3cf+HU9sX8LdrPtPMl
7y8vyi4Xfa5+GfxP9BNS/UDPX6e/8Pniw4r7OcGfqPxhH+L3X9t/7aQppRoP
nJV9afIpeABnnejn05uqPvDJjA4+HviAldueemPCJrd76L+QOzcdDwU5T+mn
SYdXmx81ab2fl4l+gvYD3+jn2B/7tlpbu5LzDfyeHx77vyNnd5L43q/4EJUP
IocBPovcBtZF5CqoXNHP5Tl71eUtJORE2wdtL/ITkB+RE6U/Kv2ib+NFFevn
yL6WOEZMxDEcF70XVe/Rf0JfaXvH0ZOi97wf0T86r6jzEjvH/Szkif+/zvaX
nLPuP9Ke/bTY9lHeji3u9/x+KcvmDtu92bL2+8r9juLYFWuzWms29XywQ9Ef
UDwfv12bTe5wUVw0d3exV4v6EHnQfZTPJyz6Hbx7Yh5PXvzKwUf+vW1c/HzV
viOW7OLtl16014iNVdtr+5BoH2gPDj3DL/j9Lz1WtfN7Scb9xPizM3643vXS
nttXjD1o+37aPiTaB9qDM2691W8MaTmLfkr9XKhtfGN9VS/xO+1/l9Ofs7x9
Xh+WBu2f9apYD5cF5YOtt4/TMCcn3j4k2gfagzPuFJMf9pWeF9iLeh6J/Lu+
oh3jRuODyKfo1VLXn7OkH/Dzjf/8vbaXfRcS+y7ovjO5CD9v+1+5mpUpDj3g
eflB/1eOT5v85/W84rOC7YO4xPYF4yrOuODX2n6ReFdUfYU+HGv7XeJaUePb
6g+KX+NxLfEvJG7mfCgk+CC4z7cgfAiK5+MVxXiLxB88HiJymCGHeb+7GAeT
+FioOD5WEhhX9KfHV0WfBNnvrq+IJ4g+CXl94nojiF7y/a5xKqVT5uvzkjiS
x23k3AlyHgXF5TwKnEfwk/MZ/yKfH1s9XjNt+XEPdejvfIaurs9feNHV/1fE
6afn6K8vPn9CMY6hfi73aPQ/ZdrWa2b+El1f0f/W+wcu3dY0ql8Z8SuZF+2x
E1gPbc99WWLcoOOCez7eQQPuWPp1kHzdX/EnKn/Ej4vix7lfr/6++n2yLoXE
uhQS61JgXfh7+rvC+uHv+btg/fD34CdaP7KOhcQ6FoSf7tfDT9GHBfShrGMh
sY46bkiMG3RcsW89DiDrq3yOCT7HBJ9jgs8xweeofJbzLpNzMCgu52DGOch8
WLdHjW/Mh/XZZnzL5/8vzybn+Ob2QJawB7KEPeDt4U+CnpigJyo92Nlqdwmu
9pXbgdhX2A1qxwqu9qqfD/AZeyJhn/t6in3u8pho7/a5rGNIrGNIrGPI8835
r/3ERD8x0Y/nbyT0SUzok4icw0dw/DiJ17kfKvtLx42JcaOOy3oghzM/bHPg
4vOK9830337z2X2eGX2s2nuFa3P+0Sx/30179gt0rSjbcULj/YPLMfMYMadp
+6c7eT6Sz2PQxOdqvtbN47o+782Xduge5veXvKZZobWNy7mJvLe5/ruLr39q
L+cn+MaZs2ufN2oPb49c/+b4Y1pW2lrT24Ov+PqD7t/N2N/bI6fHP/DZO8ur
FPNewH973YCLaw4u2s+vDZl43jc1KhdG/rTx/pqvtnY9Dz+lH8fph375u17W
Pr9fSkKf3LjEhTaFxrc0H3j7hw1kfTeG1h9Ofav9mNqOYw+/1K7PU90uaOt+
NHJ08aKB7z3xYF/3l1mvyYUP2546qvhuBXzlyKu+3rU58lbmdkXjWg9O//qR
bu730b7apBfbNp7f1feny88TVzad+q3u68qFS40e9h10PWz0gEPXv/L0+Lks
9Pg5LvQ4Dj3oMfoR/vj4wh/H4U8+XloWmho9+XjRv/1moyd/77kyQA/ruLO/
LaHBX5sdfG7Dxm5fwZ9uP9dcMHDvYr4Z+Ee7fbFlQv9+zgf+7sKWE/58bfuu
jvvf7f+Hh9ZM6OrzpX1X6x+c9vRPO+Z1sfWff2exNnxh/efjlr+S55CSZ9pf
fFz/I0pOK7YnX6xJlV2Grdh2oO8r+pn/ws29rl9S18cFXzvr07aHnF8nfvLo
btNn/vw/dZ7X1f5mzv394yLjI/i2fd7/aMm0vnHGldW/Gj5kh9uNzSY88u5R
b/ZxnPZrBvz46rrVveMHlr9H+44lzVf8/qHfOk770yyfbeF/x/3B269Z8/1Z
k7r1jO/ZeoHfOb58yIebusZ3//v7Escvvf7nTr3m8h5nRmdw6vzM3dne32V0
e/mQ+d0f6hw/tnUCv+3wTXfMfj/Gz3fS4/bqN0YPOO0bba6yZO4HPeJHlqdH
+842X3Da97f5ztzJN29/pPETeQNfvPjwybVv7Rfn7Vwvx+/q2mPxniMH+Dqi
T65+cvzdLer19XUEb9B2/pjXOhfXC/ynutUX/unW4ro43m+f0oade/q6gK/5
tGZ5k6u7+rqAb/zooBd3vauT8xn80C1LWnzxeTvnM/gmaw8/wb+x/uEb+Haj
B76BbzP6/TyT+cI38OvOfWri7H37Ot927o/y7KiPhx896/5ezjfwv9Qv21C3
58nON/BDnh0w7+pFxzvfwF+5e+3JfQ/r6nwDbzqzw8wV6zo438Dvvf6IaWc/
2NrlGfzgvsteq3PpMS7P4JOt3h18dnqsPXwGH2/9w2fwI40e+Az+qtEPn8Hr
2Hzz53V59oDxBz4rP/N6ZlP2yNnnPNp97xNEz2zKhox696kGh/UQfbIp6/Lh
7688uWcUvbEpa3zKjp+a3Xis8xn8wTUPtj9hWEvnM/iwZc/+OHtsU+cz+KlH
7nX+wWc2cj6Dz7T6jXm9sSnrbe3zemNTNsL6z+uHTdkkoyevBzZlTYx++Awe
bL55e2lTdpHxBz4rP/PyXJbddMa9rT/5sqvIc1k266YPn3jz4+NEnsuyd8ZO
uuHU79uLPJdlvSwvPS9vZdnad6fdvbnffiJvZdnBLba0K61bR+StLNtr9eWt
W1zQROStLGu6W61tPau3FHkry04/rnrVESvai7yVZfd+eGfb8x8+TuStLLvZ
5pvnQ2kW3/ngkTsu7CJ8KM0mfPjSC5/OP1b4UJrd9tDhdZq92Er4UJr9xfL2
83wozeofcNvYwTdUFj6UZo+1eP6SkQ32FT6UZj9Nf2XMoY/WFT6UZg9b/9CP
v3Lwe4vvmXVaJ6cfHP8F+sGbjvph5tofWjj94IfZewToB19+bf0lE0u3BOgH
n2b+NfSDj1l54riB9Q5x+sGbW//C/5Dgf0jwPyT4HxL8Dwn+hwT/Q4L/QfmP
HXvND0Pu+Wzdr/ZRuNvkUPZR6GdyK/soHGZynj8XysLuti/y50JZqGn7SPZd
SOy7UOV3n/3w8r/tRtl3ocPRw454bf1huu9CH9vXso+C7iPsz4TeDgm9HRJ6
OyT0dkjo7YDeFj0cLqs+75IXWv5KD4eEHg4JPRwSejgk9HBI6OFQsR4uDwm7
IiTsipCwK0LCrggJuyIk7IqQsCtCwq4ICbsiJOyKkLArQsKuCAm7IiTsiqB2
Bf4rdp3YvTFh98aE3RsTdm9M2L0xYffGhN0bE3ZvTNi9MWH3xoTdGxN2b1S7
l3hVwu+L6veBq38Hjh8nflZM+FlR/Sxw9afA8Zugn3gafhD0gy8yv0n81ojf
Kv5pxD8VPzTihzIv8KHmbzIv8HHmn4r/GPEfxU+M+IniD0b8QebLz3fmTu3S
Z25xvTyf8LUFb1+3rbhef3zn7RdGr9it0Omj63avdmFxvsQn1lu9DuY11/qf
dcz0wn/8ZeZ1gPXf+9x7fregdXFef7D+m542ea8nRx3v85pm/f9g/UP33bWb
LZ54/r/134m3fbb8puI+5eejrR79+ZVtxX1ar/PyueecUqUw8Zdjqg24tJfT
P9jiYHdZHRLov8v6f7TVP7dvm9Te6af/W0c8fOd/5gX9da3/OPvp49rP6ub0
0/891j/0P9hq0rrVj/2cdZ4/vsNZt5/q9B/er++qV0b/kl3d4f2XRu5+itPP
z3kHDZ1Wpd6JTj/vHatsm7j4z191d/onWP+thr1x4IobWzj99L94zW5/PrNf
W6f/Dev/+zjqv3V7oN/r4qw5p8+et3R3ubr4i5mrqk6qVOhmdbaZ10752Zy9
Nbjv0qkbiue7xd+yx4ZfPr/q7ON9Xjvjdj9lr+71f+M+ua2bz4ufPy09rcWn
H3fxeR1g/ffrsnrWxy809nlNs/6fPGZIu0Ujm/u82lr/Fx59Rudavdv4vN63
/u+0Ou3Ma8Ar7+zzXrVt2dRB303f8JfuPq+m/+Xbuqzy+mPqbhnTzefF/dpZ
vaodsPqO6POa/t/49oZs/kM3TZv4Y0efVw97b7rU6j4xrybW/yl9LhmysX1N
n1dj6//h5pedM2V1fZ/X36x/vpvAvLpb/9NWTLnqrAvb+LwWmB7aaOvLvHbS
vyzbUHvX5y498DifV3e7l/h80bw11Wt19HntjPutyDZ1v7uw4PdtfF6jLR48
3+pcMa9G1v/SR9t8+3ztKj6vbtb/BUsbXvu7nvv5vM6z/hfdNvaqXt808Hnd
bP0vtv7zdtEL2YDyaw6sNbDo16z5zc545z/tvix/7ryf/f6ZSc+POqFl0a+x
+4HXrX4X9P/jNzv737LfwEGbj/nJ/Zr11v9hdp8I/cOs/5dP3bZm72+Lfs1P
v9nZ/0zrP3/uLAmZ6UnoH2vx188PaP3qH2scK/bG/DBk6WV1d3upSP++Fpd9
Q+jnZ9m3L+w1s2cl5/8467/kpWp9Pvm0htN/ivU/cc7SwspmtZ3+g63/t4X+
NZ9eXe2u774J/fbcenKja4p+zUc2zo2mJ6F/px5YHX68senln9/f1um/w+L2
C0R+vrH+PzvjvQmtftrX6ednz78f/OC3/Q92+p+z/hf1enfWsqWNnP6x1v+X
Ij8779N+DJ99duspOy7q6fQT3z7v5lH7TVnVzelfbOOwj6C/p8XP2Xec+6/v
3Kf+fRPm9ZONu/2ygcsHz2ng87rAxt3z3TmdXxtymM+Ln1WfvK79mnOP8nmd
YOOuMn3CvIZtOHLHgAXbw1XPn9N09PxTivviv/zcFlYvPG3j9Nkn+rzO2Kn3
AnqPeX1o46AnmdexO/VqQK8yr+E27vhO345+a9xRPq+1Nm74+KvNt9zR0uf1
exu379AaA7+4oJ3Py+MBy3bqf/RYBxv3DTsvmO/P26746pMbK8cR4/ae++Pr
p/l8d+rhynFIo9XXrNq/t8/3kp3nV+T8Yr6H2Tv4aXbeMd+3bHzOR+b7i437
Tly+X9uf2vp8GbftpIHlRwzp4PNl3OpNm14y4w/B59uEehV2jjNffi60c5/5
HndD77d/OKhqHNv9sPXNzirab9wPz6y91y3DGhTtt5fOfvD9I1rtGtddeuT2
Kdee6vPVOmzMK1j/1e5+cWCnjZ18Xlus/7vXfjni/FpFe/tl639Hr47NV03r
7vO6wPq/T+yfkTuaP3Lgy7vHbY8c+MgVNxTt7fZ2v/mY3Q9C/7qvrpra66Nq
8aNG+1/47sNF+/Npuz9V+3OU9T+7dOIF1z9btKvpn3tD6P/e+j9kxSWXzvu8
aH/S/0brX+gsHPb93QsP+XM/5X9B+W/0F6Bf1qWg6/K02NWyXl5vH/mk/wON
fvA/mV19uNnV4C/auNttvcCxk4PZsfinbW2+uxnfwA+S+1DwTcaHO01OwLlX
vc3OBeIJ2PNrrrjr6jentFf/qKD+EfwfevS5l30+r6vKZ0Hl09a3wPqK3BZU
buE/6y7yXECe2Z/fWf9zbH3BzzH+dzG/CfwFG3e9rTt4feP/I+an4I8jV7NM
rsDh52Pm7+Cnw88pT6484btri3468jNw6UOdpt7Yz9cF/JdlK1/+TzyfdQH/
cnX7xv1rdPQ4j37XgPUCL7X20AM+yMYVvV1I6O0Cehv5xO/YxfQn+Ju2n/b9
5JUL/iNXzIs8k2NMD4MfIX4Q8y03et4yfQ7+sPlTbcyfgg897B7wTvuekZwL
Bc4F2le3+6zHLT4m50WB84L1fU34AA79w81PhM/lwk9w6D/O/E2xE7KEnZBh
J8Dn080/OtnOa7EHsoc/PaXF+sPbOJ9XWT8d7dwHf8b8tanmr8Hna4yesWY/
gB9sft/p5vfBz92Mn49IvNHskAw7hPZ32D3X23YfJ/ZJhn0Cn1cJH8Chf4r5
s/AZ+q80foJD/yzzi8X+zBL2Z4b9KXZ1pnb1IlsH5F/s7UztbbNX/TsRYodn
2OGsLz+3PbHT/hT7Nhv1/sZZCyo38/UdZPTvYnYseBPzZx8xf5Z+phqdc81u
B/+z+YMLzB9EHn40vq3/penut/5UxI80P7qP+dGMy8/O5i/w+4nkqZofipyM
NjmZIfe2W2zcTTau2O0ZdjtyMkjWERw+/NHiBsgJ85pv8gB+lM2risUfxP/K
ej55dbc+V+k9y8ps1m1fzpldI6pfmSX8yizhV2b4lfn7lJVZu2HDul/9Zk1f
r2j9jDP/Efxe84ufMb+Yfm40et4xPxS8geUr1TP/WvzBLOEPZviD4udm6uea
n5jhJ4r/m6n/a/5jhv8ofnGGX8w5PsX632T7zuNmJs/bLH7ifo2Ne7HxH/wx
49vZFq9Aft4XPQB+gsnzlxa3QX5WiJzQ/mbjzz9MHvJxlZJs/Jk/nf3wl500
fhIS8ZNA/ETWPbDuIicBOcnfK5VkLZadOW3O3duCyENAHkR+AvKTv4cqyQZZ
3cj8PVRJdqz1L3GbkIjbhJmyvrYugXWRdQysY/6+qSS73/gpfA7wWeJvIRF/
C4n4W5gvetv0Z0B/ir4N6Fvhf1D+n8j7PtOTolcDelX4H+A//f/L4jkltn9l
XQLrInHCkIgThkScMBAnlH0XdN/ZPg3sU1mvwHrJ/grsL9mPHu+SfRcS+jmg
n/N5RCvDba9tH7zK322RR7Qy/GD1TvP3YivDWGufvxdbGTqbfpZ4ckjEk8ON
do5LPNm/KwHfZlj7f1h8G/wz6+83Zofk77WL85VzMHAOyrnp8TeJw4dEHD4Q
hxd7I2BviH0SsE/ErgjYFRKfD8Tn8/ezG8I7j2w5d7+OteR+dkNYVuu2L3qc
00jP8cA5Lud+4NyX+5SQuE8J3KeIXR2wq8UOD9jhYlcH7Gqxw8PYiu3n8LbY
RXYvE/pVbJ+HR8TfsfuakLivCfgRYm8H7G2xzz2eKfZ2wN4W+zxgn8t9XEjc
xwXu48R/DPiP4m9G/E3xHwP+o/ib8a2K/cTwuPg1dq8XWlXsh0b8ULnvC3rf
97rtV/wF8SsDfqX4oR5HFb8y4FeKH+rxWPhs96pxssUl5N42cm8r99FR76Mt
ThW5z5V76qj31HYPG7nnlftrjx9KHCwSB5O4WdS4mcXZosbZiFsSl5M4WCQO
JnGzqHEzi7PFU+3eHJz3IJdaHAw5GWd8Xm3xNLm/jon768j9tdzXx8R9fdT7
evjMfbfc40fu8SXeFYl3SXwsanzM4mlR42kWf4vE3yQ+FomPSTwtEk+TuFkk
bibvOOIVJofyniUSB0bOkau7+g/78aiTBvh+B3/y3O/mbm9WfF+g3/uQ9wiR
9wisL+2nWT/Qr+NKnn/UPP9U/j95HfSTz6+rWqhveTUyrwLzyvuJVQu3Wn6O
zLeg86V9tDwfmW9hmvCN9nznOp93V7XwreUXCX98Xvl8vKqF7ZanlLdbiu9Z
8vfmlQo9vuy7z9Tb+vh8wR+rX/b5k+e393mBH95r9OSZ3Vs7/fpdDOYL3tTa
Q4+Om1/HrdmNXQ77/t5TT5Z3LluzttfuenbHA44Rudqa1R7fqM9rfZo6Pfpd
jHwcfmtW19rn5ao4bj6PbkN26vR935zcp4fkuW3ISs0ukvzVrI3ll0In7WeZ
fSV5rdkvp+/MU4V+2lOPXey0DDstn8+2IettdObpKc2+t/xesc8z7PM8PaXZ
Q5YnLHZ7lrDbs7Fi59PPuXv02HNYo20hn99Ymo2xfGaxqzO1q2k/0fKi835N
adbV8qiZL3nXN1s+NvMCf8Tyt6EHvJnlhzMu+MI1y6YNWNxO+Rngp/AtKN/A
E3wI8EHmGxLzDcxX3gWE/7N3CvIuILxj7xpEngPyLPIZkE+RQ/8ugMhbQN5k
/wb2kezTkNinIbFPA/s0n0+4NXQwPSD7N+j+pR48ekb0WEzosZjQYxE9Bj3g
j5ueFP0WVb9xT829lZxHUc8j2nNvJedR1PNI6/bLeRT1PKJ9qdyL0Z7ziPnS
vvLynfdrck5FPadoz32ZnFMxcU55/i30fMD5bu8WwZ+W8xf8Vjvvphj94Nx7
1pf7PuLzHRo+N+Wgjbtp3lFG3pHnFVic8/WVB7a9pkt5yMdD3s86X/rDpuuf
1vjYC4H8LmkfaM96eZzJxuX339q4r9m4zGsX04d/MD0DXtPidedL/HC80flh
o3Yzl9231XHLEwvkiUn7QHv652fl//5c73i5xRvPk3GNbwG+SX5dIL9O1iWw
LvChqbVfZu3BiacdZe2hZ2/Tn+cLf26xeM46O9fAbzc5fELkZ1rCvrU8kML7
lqcBzn39+q4fXffMOcdpXkeBvA7w76Q9++IGa0+eCTj9N7jxzH1e/JPaw0sy
8vHy+n9+dsfrT/9we6si/cda/uF6W3fw60xO3q543Wcl1j1j3aHzJOv/dJN/
j2NY/11M/sEzoR+8l9E/xuiXeQWdl/0MiX0U2EfCh5DgQ1A+2L4LiX0Xzhc+
2LxCYl6BeQnfQoJvoYvoGfsZyYcHJ54w65IPn2p1aFFO8Ovrm/yIPMeEPEfk
Exy6yJMHx7++aWHlsb9Z0MX30Qf4cRXrc99fkofv/YMTrxht/cs+cjrz9kZx
XNlfMbG/IvsLfJ7wmd+Z79vC55Gyf4X/hfqyf3mnoOtl+XIF8uXAyb/6+Loj
rjn8s366LoXEuhR0XUzvFRJ671d+bhejZ1fLrwMnH+n1Y/9x0C7Pd9T1Kuh6
WZ5egTw9cPK7pls/wv9Cgv8F+A/eRfgGDp1zjG95O21FtqT3za+2uCTouZMl
zp0sce5kiXMn49zJ31uVZrXt/SZ0HmHjbrT8dvBzbdx/CJ2V7N8Se8ea19uV
KqG36Qf8EHtXK3n1gbx64U9Q/uCnJOgPCfoD9Is8R+QZ+s2uiwm7LtYXu9fW
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
CcIZFw==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
qr6z8FXYZ4KfRLYN8X/9WJgHg0Zjx940st5/WWE6Dl34q7TtZffKfgvwhz11
b/PY/g3wlO3U5nbBhoKfRbY3cV5coesjhOeCH0e2acFHdtD1YcIzwf2ZR91n
es8g76xdWqZCtlpXcKfEepjOmsefur5AcLfK8g9y0GqCX0W2T3Hu3BDb5sTG
mY+MGM6lq5EDha8peA5nbWRdz9fIfIHH3jGxTqhTalkB2xzrjq/LGao7Wc9t
pLqf6tablJn1hGfp3leZ+epVM8ulyKcVPEUS7Fz8+4nlgoc5O3S/a2Q5bVJm
vvYtwR7qszE8veDSwnwaNKgPNCSy3m1AoLP96pZrsccPr/sfeiH8R+Avhnp0
aujW0O/tl1gPdzs8fmKb2u6CSwrzY/DP6P7gnfEJ2T+xvusO4f9Efh5jIlPP
VP2g3H56IyP/py3R3Qj/smY/t9c4G/nvwnxeC3Pjn59fC3MMY3KOcJ7sLXiW
+j4X6r/L3IYzAftab81lX8Eu/PeRaTa0et3IvP5t0JfIfgbdcvNO8Kg/RF6H
XpwvarNe5PcfVtq29b3a9M4tsyDLwNdvFZm3/6WwPAL/3Cs3T4Iss1ti/WRP
zek/jXM5etXK+svVIsu363Otuc+u7PODnIh8i13vBrXfr7Lsi9yH/vTioMdo
JLil2p8VWc+ya2K9Zg/12SWxbhV/oTUz/5cXCPaGF4gsw2CnYP05x/BPuxS5
sbJ+sR5ZD9g3txzXN/C88Gac1xclhl2wy+E7wXkvuFNm3vbt1DwmPDP83/3C
d4zMm2IjgC+Ff22b+P6l6C0r+4CcxzrklqHgsdGxnCv84Nz6F/Qw09FRh3Om
h+4tinwmnKbn3BPb/wd7If57tMdOfFNuOQW+d6ie20b4xoLTMvPuU4GZZaXH
M/urjNN82lb2p8DmyL0H4aEi8/cPx9bj/VozjYRWwiPVA91k3vtm5sXg+xpm
K1SLtTm6/wQ0IDIv+19kWw/38CV7X20vEtwjM1/9QWr7EW2W1mzrgc/DXxHb
Ezad/6ALlf0xL6jsnzNB+PmCO2SWm95MbXNrGFmmwh/yXdVdWNVWONUyJnMd
G5l+/VgzPCiyvWl5eFaDms931h8fNuzy6BNWy6z76qr7LbXem8bWNaDHQC+H
fgidOnpJ9E6rl/YfAIcnvCYyr7gvNDW2Xok+HSPzfjvX7dcH7WgsmCIfCc7T
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
Ev/4f2y3cV4=
          "]], Polygon3DBox[CompressedData["
1:eJwtnHccl9MXx5/v9/vsrIQmGkYpLYlCU1ZZkU2p7MgMKSlFRWSmrIbsJDNE
JVmlQUpUZpJkFH7I+H3efZ4/7ut7z3Pvc5917z3nfM7nfOv17t/9knIQBGdE
QRDq97YkCFrqQLM4CBbnQfCO5IE63kiNr0p+Tf3elLy3+jRUn+NV+qr+qMpq
tfWWfLPq7StBcLnkIyWfLvkelcGSd9EY5+v8bXT8RdWv0O8UtZ2o/qvUfr6u
00Ty+FIQfKV6+zQIOqqeq9+N6r9Cv93U91IdW676SN1fQ/VvpPpCtV+TBcGO
aj9K7Yt0bju1H6r6qWofrvbzNGZj9R+nY1+qfo5KI8mbVD5X/VyVfVS/W+1f
qP6nxnhA9fm6tw90/tnch9rb6RqX6dghau+g9l6qD+P6an9C7Sep/XMd68D9
SN5Fxz9R+2D1v0P9X1HbeMlLdfwQ9T1ax85UvbPKMeo/SOUi3qfOX6r6RrWn
qvdX+wOSj9Y5n6m9pGPT1LZS9Q813qFq7867VumnY4Han1T7MtWXqn2d3seT
OtyNdyv5Iv22Vt9H1Get6qfp/EvV3lXy6ar/nvp98F76qv+F+t1f8mS1f6P6
HmrfW/VAfQep/S7JT0j+UNfrI3ks30X9G+tYVx0bovY7S547E9R+gcbYT+1/
qHyt+pe6vwc0XAfVD1b7Eep3mtruUrlO53+v8rbO7yT5QLXdrv6tVG+h+hL1
P5djkjvr/VyjvverfYHGO07Hl/O8ksdIvldtt0q+XccXqH9ZY1bVsZU6rz3f
V6U1c1Slqo4NVblA7QskN1d9lsZ4j7mr8r7qTXmHqq/W8+Wq76h6C42/SnIm
uSrnSa6j5/pO16qnMlX1o/R9Jqn9Ycl/qe95kr+U/K/kmqrP1bFWqnfXtWfo
/DmSW0o+TvKzkm/T71WSd9Y5bTXeFXq++3U/i1XvoPba+l2n9t1VHlF9vc7f
RX2r634OZC3qGt9I/k/t7VT/Xu3VJddQexu1H6Rz7tV4N6j9AV3rco0/QfKi
Yv7U0u+3attVZYrqdVU2qX6wyhOqv6Px2jO3de7z6v+x5BMl95c8U/LebDq6
3kE69izXir0//Cp5nOoX6Hq3SJ6vtoPUf5/M669XsX+wxlnr52q8lyQ/o+Ox
vs8JOudpxtL5o1V/S+e3Zf5KvlXy28X84p3z7t/T+Ysk75t5/3qu2O9OlvwS
c1Pn3K++z2rMXOP3k/yU+jRUKan9EI0xQ/V31aeT6r013gs6/6zIz19Wn+11
7gG6/o+SE9WfU/vnxftsV9zfpzr/CLW/IHmW5C+K79m+eP6j1X6W2l9nHebe
d9h/flOpojEv0v3+pGsN1TkHqd5N/c9U2yz1b6X+D6vPL2q/WMfu0Lld1X6G
6q+xDtV+QuT59jfrm/098nzborKt5Et0P3dr7Dt1fJT6T4y9d95V8h78tcbb
QfJOqrfMrVfaqW2zShZ7/jyh8z9gr1F7J7XvpbYNKpHaq+n4iWpvKPkh1R/V
eH9Kvl71R9S/nfrvobb1KhX1303Hf1b9AJXH2L/1zGt0/X84pvruOvaL6m1V
HmcP07FP1f4/yfup/ojG/1XjD1LbZI3fQePvyffSN36S+ac+a9U/VOmo+sFq
b4DuUPlP9bYq9VX/XOUf1c9Rn9XsZ5JbqL6dxu2m8WtLHq96Mx0bqfbD2bN1
7Rq599v7dK1Vqg/T+9lL7XuzL0mul/p+/tXY10k+WOffrfbj0U9q2zazvnhZ
/Zep/TH1m6jx6upYPeaY5NckN5C8h+RPmd+8Cx2/U/3f1rHGetbbWSOqT9Xx
h1XfXf3rMld0jd1U3131d9T/Z8m7St5N8tuSG2m8G8qe88z9QZJrarw99awf
q32l5JtKvpc7JH8ieUTJY4+VfKJ+L9b5m3XNf3XOMrVfofb7dR83s19IHsr+
on5jJP+qa9RT//qS32V96XdY2d9oguoXsoep/qDqK3Lvc+x3AzTG7ZF1Krp1
YNn6Fh2JrjxM5WDJh+r999a9dCre50z91tDzHFty+yhd/37V5+m8XnwvXa9e
xXt+De5VpS66R2PswrdinaheQ+01Y++r7K/XlLyGrlOf6tgS6rO96tfq+vXV
3kD93tP4y3VsmPo+rL63Sd41s721sNBn12N36NzL1ecWdLzaz1F9tOojcttk
2GaPqFylc0bz3crWoZ/qutdLfkHyq9hb7O86P9XxevoWH+n8HXTst8Dn3KK+
J+n5+6vvSB2/Se1vqP88tY1ibkkeqN9nJL/CGlGfK2Nf+ymVa7EtVCar/oLa
10S2CbENT+AbqO3+2PbmJegb1eeo7Kn7uUHHjon9XDzfGerfVfJclb14fyXL
/VTGq+0IHbtRfR9SuU/n1il7Dv2o+6+teh3V5+t+N0quhf6T/JbkHyTXlFxL
8jzJR8W+VgONt6/eyY2Z69vQJ7NNgm1yh8r5sfU8+r6n7meA2tay/ni/KsPV
to3kb3Q/MyUPkzxbZQ+NNwSbTPWhsdtm6fwlOn6qrvGW6t9hm2C/6Xe22l9X
uUl9G+p+G6n9cB2/nv029tzGhhiv+ldqPwF7U/c+J7cdij2KDnhI9Y4qR/Ft
uH+N8Udq+xs7/Fz1b6H52KSw3W7IfR/cz1z1uRn7O3Z9k+5/O2xQyZ10373U
p6/qtXTO1YHX5mrVP2KNqb13ye/rXl3vafZi7FrsY/1O13hnqM8X2NeSD5d8
hUqfyPqil8ZroXOOZQ/T++la8ZwYofo6bCjV5+j+52q8f1Lbq9it50l+MbLt
toeO7amxH1T7eskD1T5J7Q9IXif5WskTJT+qPkslt1H/x9A3qff/vzXOQLX3
U78DaNOxb/EdsJfRH+o7JLfNgO1wjdoelvy/1P4Hfsg5kv9NbX9jh58veaje
956S98KuzL0+JQavacwhqn+L/6X6Tzq2Red8I3mO5B8k/y/0fpphL+lYD9Wv
lVBN76e/jl2t+j0af7raLuHZNf7lOuelkn2WDaoPV/sc9V2t+plq/1L3113t
MyXPzv0N+BaXl+1T4S9cU7bORYcxh5hLHMN/eJU5oOtfoTGna4wzNN7Vhe0x
MredzN55to5dG1mnodteVt831F4t9lrrVfb6/0jPMFDt96jvLWrvyfooW4ej
ywdK3rlinZqp/iF7asl772j135k1yvvWseHMaWyEiufoTqqfrfKB2n5U22fM
B72PFyVfrfMeyv08tdW/DWsqtv7h3B6Se/LNVJqqfaLkfdFteo5nS/bZ1qk+
X8caqf0DldrsVbrOWOwb9Zmg+nd6hvNZX+r7pq73meQjJb8o+fXcNgO2w/OS
X2N+6H53rfidfZja7sL+ukDyUHwclTs0/pBCpzbAp1W9mcrT+G8qf6neXGWa
6q9ovAUa799iP7wP/SN5O8kvM5/R3xXb7BMy+//P69yWFesknr952T4SvtIi
lQM5X31q4UNjA0veVnKNQj98yvvTsZWxfY4Rkb8PvsgVuqeT1fa8yg/Y1+qz
b8XvGP/rHZUmqk9V+Qn7VH2OUf1Zle9C+8j4yveXPed5/+z32DzYPmAUYBVH
6Fj72PsnuhifHN/8rNDXuw19Gdrnx/fH5uB7P6h3MED9d1D9Ffa61H3ZW8ZJ
nhTb/7xL56yLbV/foPr2Ki8wn1mzzBH1uUpzra2OddHY+xc+wt0a/3ywEdW/
0Xhf6/yzKtbZ7AfrJV9QsQ3Feu+oPj003gyNNyDxd+P7cU3s+UPU3oW9Tu2n
617naPzH1faL2r5T22TJE3h3ktfm3oPZi9Hp1+nYTRrzeZ37amT/fXt8bLW3
VVlS6PeVan9A8vrYmA7YDjr/stj+AnjN/MB4C/bCF6o/pD7fq35XZnwHnOfr
wl/Ed+IdH6n6qEL/s+eD/9SOPLeYY+tVdtb9Hai+YzR2Z/AI/ZbxhbHBE79H
3ue8kvUnPhW+FT4YvuZP6HnVq2KjRvbJ8M3GB/Yl16l9D9WrqH0n1iu2LniW
5F0k/xR6v+8JPqPxT5H8ouTRav8Y/5jvib3O+kltn48peQ4zl3ux76n/WB1b
pXpP1r3k2yV/pvqP6teE+SZ5N537aWT85zQd/zS2fmP+MWdZK+Ay4DNXgUfF
9nnBVvApt/rCke3tarqfA8EPdE+3Sn4Wuwx8IbO+Rm9/hf2tPt/r3Nk8T8X4
Xl/Vu6i+LDbmBfb1eNl7JjYYtth96ODYmAzYzJiy7YNA8u/6eYfn0/EyNojk
dyWvLvYE9gb2GOzXL9g70H2cGhnDGBZ5vwPb+C+0LrhQ/Var//LK1lcQbFD5
DV8RvEL119V/qdp21LkZ+6vqX6tsAp9R+xs69pHkUO1/gfXg42GTaLAB+v2q
5Pf5lcp17E2S72bOqgyS3EfnPFr46K1CYxj47s/rfc5m71KZofrR7DHYNoVN
fWxsXcccZ66Df2Er1Vf/N2L7VfhXYHzPqD5EY+wmeS+ws9w+/n6hMQ98f3z6
lqF9EHz912LrCnTG67H9ZfCyc2L7nzuqb6XiOfOg6k/FlsOK8RQwrQt1X91K
xrpaZ/6WG7ABUuOdfOuf8clS3xf3h86cXuCp+6rtPdZEakzsvMgYDljZmMT+
Knv5utwYwqWRMSOwhZD5WDZGATY2I7Y+3JY5ovquukZS8R7K+wdPBVvdpWIf
GXsXbHMnyS+pXl99tlO9SsV4zlWZZY5/Dl4nuUXZe3jtzH4R/hE26ZOqT42N
ly8MjF+C5zUrGxM8MjMuCT75QWC8lO8Ldo1Pg2/TNrPvsFHl89TzAf8KnwDf
AP9jaGAfB1/n0sz4FjjXGvbyxP4pfuoXkk/FnlP/WzTG8tD4Bf7QRbHt75v1
Lk9jrZTtXzXGrpH8e9n4ZR/1X1E2prJjZv31W9kYbfPYNg22Dccmq36i+hyk
+oe65gmq5+zfZc+PxXqeN9l/dH9TVDaq3k73cBhYi/pXcmOUR4fGpMEu56Ef
KraRwCPQh+BlrCnW1prYexlzkrn5pcpAdAf+NPojtv/OmmRt3qFyduA+9AWz
BPsGgwKLek/1Q0NjJqelHh/scECx1sEjP9Hz/F5yzOJ4PV/bsn2C41Q/QOO1
Do0pB6o3U6ki+QgwFI0fx9blS8reH/BvefdR2TEV7m9R2Rj/PcX90/cnnZPG
jnsQ/+AewENDlf1KPofnBecA72APwX88ILZu+1fy49hTKnGJl61nju1n4W9t
KfyZ1rrf/UNjov9l9ndo45vuz73r2C2qf6fySWpMDGxsksqG2Pg3c4c10pT7
Txwf+iSyP4czcqDalqh6d4Gfstaa6h6mx7ZvU7UPUnuX1HYn9uf7Kv+w3+XW
uQ2wFzTWj7Hn0qCSffRbMtseT6iMVH04+on9i/1e97KHzv+W9Sx5s+Qb8Jkk
12WPSTwe/v5tgecnuAv4C2sIfY3/vL3kGyUfwX6WW+djA3yh603Vsf+pPlh9
p6jtJckrdW9/6fmfBo/L7G/gd6zHXsImVXsd7H3V6+sePuV7oMfBH/T7nvq/
qzImtv+1XdkYz2Gp/RPa3mf/SY2DgYc9ovandO4Qjfe06jNUv1fj7a2yQffb
EP9QbY3APCTvI/krjVVfchxZnz5GbCBx2+26t6a57alGkm/DDs6Nm4Cf3BM4
HrBZ50xXfWlofA87EnsSzAjsCBwTPBObBvvl59i2OnsOew82H7bfyyXbl8+A
t2OfoW/AFnX9aTr3+cj2NH4x/jE2EfY47/dJ9T1J53+Db61+rZl/kv/E39E5
a9VeT8d+0Vg7Jp4Lo3VuY/At/a7ClsI/Un1DarzozdD+YlX9rsYWxIdT/Rm1
L1V9k8Z+LLf9yVz7UMc2R36H76u+IfK7fVbyR5J/lfy45Pr6bab+y9hDVf8z
sX1xk8ZuqPZp6r9Ebb+A2+Xeb6aVbeMR67sys65D5y0Aa9D5X9Om9zI9t01P
POj90LZ+Tf2uLTkGN1n1IzXuqeiiAqNgj2oj+b7Qexc+A3vzstC+BHMGe2xE
6LnEGsL+GxZ6bfFOsZeGhn7XzJEtFdvgzB30I7E9dAYx5YdS4xXgFvVy70ns
TdUDx/O+TW2L4hMfq/qrmX3lwTqnd2r/mFjXnWo/PvUex16n6tZ4Hfj88aqv
KRmjeTV1vOAQ1Z/Jje93Z+2WjKmDF+1Uto98nOr9dL1SxTqjkhkHAA8gRnhb
7O/K9/1b7YnqG1UWSv6PrS6yPcneskjHflL9OY35MfpV9Sd0/aclL5b8s+Sp
kl+QvELyH5Kfkvy85OWS/yf5ydw+FL7UcyX7T/iQ+JLNC/3LGv274m/I2p2d
Or5InLF77j2UvRTM/RFsbcnP4U8G9qcPTjwfzo4cXydeR6zmPB07mNhIbF/6
XuZ3bDwSLHOOyiS1H5Q6vnM6tqvO7xT6eovwZ1T/Q+e8iu7XeH+GxqvPxV5D
X0h+O3W8kLhhD53/Vmrbg7jOCZJnpl6frNOuzEeNd07FYzI29zdd9Y8D+/uv
pF6vrNtu6r+E/VLtf6vfRsl/6vfNijFYsNg3UsdHiZMer/bXU8cziWsel3s/
wjfYXf2nZY7fxGVj1E1Vv1T9lqs+AbyCZ48cT+yucz7Rta4M/a4f1bGNofUp
uv9aHWul+lXsL6o/rvYfVe8f+lnuw0ZT/a3I8QZs5n1ixwcTfHH16UzsLjMW
PF9lSurvC1Yylf0l9hr7PbT/w9rj/b1S+EQr8Osix+vR0S118CmN90zFGM0o
3p3aHyzZpm2i9hXM05JtoFaSBxd8gpW6Ridda0hk/BWd1Qx7OnK8Eh3fRHIT
9T9J/R/GRlL/ppJPkTwJ2zn3nrxZ124ReK/eV+Vk1Seyd6mtSWZb7AIda0xd
ffdn7utYw8i4BfgFNg94xD65febG2OfqP0rjbGL9SK4Kto1PK7kle2IRrwEv
fIN7UN+f9M4eU9uC0PEn9ugfKtaJ7N3EwYiHPSh5ss7dpP7PqL4kdHzrN/Vt
xV6oMfeKjEF0kHwndmfuuBrxtYcCr88bIuN/2BzNQ9/bfmrbCZ9AbS+Cd+rY
X+xFOn9hajwPXO+k3P4l9z5S5zzH3pka3wPnO1nty1LHq4lbnyp5fur4KHHS
EyW/rHPexvbS+U+o7crI8WPmXGP1+YiNtuy4/Snqf0Xk+DFrYp/Q8UBi0eer
W0PVt+g+51c851j/k/APK7ZhW2qs2ZnXI+vye433r+oH69xaam+usXfT+zpc
8r06t4va/wr9/Iy5pdBf2NrjdPww9jsdP0hyTZ3flO+Bvatjw0v+PiX1XxsY
g9k9M/6KbsHnOAC/ICtsS+wr1VclxhZG6JxzVe+b2BbkG6F/VhR8EmxobOlP
EtuS+AT4Bl9Jvq5kG5PY0scFnwEfHV/9vMTfijl3ltqXFXwFfHZ8906p+QDb
6P6OScxhOkXPdEZgbtOCxL4zHJUB+GKJ9272ZPbmExPHYvDJwMO5P7B2fMyT
ivsnVnW9zumj+tLEvvZIjfeA+i8v+BKtCizj5NS6+Y3Q8cW2qbkPV+rY4WBv
qbkcYP6HYVuk5oKco/Y22CqFfdGlsE++kTwlsE+Ib9gjNVbxauj9Go4OXB3e
Ya/UnAPipsRPz0x9PrFdOAlwE05JHQtlD0KfE2O4KbK9SuyhX2LbARsJW+mA
1NyAvtgfahuam0cAn6C12i7NjbOBtyXM18R1bDpsu6cT286v6Xmf1fvaV31r
lGyD/lnx+yI2ic7DnuH5iG2yZsBj4GMQD7kpcDzuM413V2AuD/h/39TY/ZUl
+6efFvffJnR861LJ4wLHyM9Ve5/UsQQwvVPRZYm5O3B4+qt+psqFknuUHe9Y
nRhr5x54P2sSc0PG6N4fzhzjHRR5TjNf1iZ+9/gAxFL3TxyLw8aqi3+S2Jdj
zwfvOlry6SX7kOi7f9B5gbkwMwt8dnOx/9ZJijVe2I+s/aMl7xRaZ/ykc5ew
BgLvjXMKfTBCY68EU0q9h50SeQ6yt7En9o28htgrk8xY/yp8qNR7xpbCfmIv
YU/eVOgf9mr4dMT+Lw+Mt3Uu/KlGhX27d2JbEw7IrhqvlsoxgW0WbJemKmcG
tjGwNeqoHBvYRsFWYU8+J3KMh72aOY+twhxhrixK7PthKxEPW1zsP+hW4nFr
9Ns7dMyO2B36bW3h76I/GQv7B8wH7KdXYtuBPR18cAe9j+P0Lr7AR09tg50W
eU1jm22r/rUC+yjou1ilSmBOzh+qb6NSM7CPgK/wbjE+uoD41ObM+nuX0Pbh
URrz1JI5MNhPRyWOncEhQV/sn3rtgfnAleqK/i/5G6Pv3yvmF7oIftT7kgcH
ti2Ij20Dpqq+H6m8mdoGPiZyfAvbGJuuW2T8AVvvGHzc0Pf4S2ab86TI8T1s
0V917NzA3CX4a79l3l/hWsHv4pl4NmwY9lvi1fBNLwqMD/6h/pcE5k7BT4sz
c02Wq8xLbXMeHTkex/xokDm2+oHKLPxx1lBgzOBlfKfEsQliFDXAWhLbFvgM
+A74FfgX4BPEI04GT8EeY/3GxvTB9l+VfH1iPcXaZn9ln8XvxP8kpkF87i71
fxI/RvLVifffuyLv2ey3+MhbeS1l+87EZInNosOIl8Axgms0KXB8i3gtWH8N
9ojMmAHcIPhKYAnYTHCD4B9hS2FzwduAv4EtNk1jvFP2Mz2e2p8l3n4a9xua
IwNXhnjNZYntGfwz/LQfcvPJwPJrFfMXHQanhD2avXpy6nu7LjSf5XaVSdi8
OnZlYn00LjJHFS4p+A+xCtbA74l5GPAx8Kmqa4ynUvv7N6veL/d+Cs4P3n+M
2i6WXC0yPoE9Cq4AvrBX4HjpJblxBfCF6anxLWImXI+11wz9r/oRkfkG4ADg
AXDowO8bsYfhK0Tm516Qm7OwWMd2UP211Fw2fOIGqfkQxHaqSd6UmA9BLGRH
yT8nfgb8Wvxbnu2i3LxZ+LNbCjx1TGQdha6Fw0XcGR3Wt9DHxP7RMSem1rc9
JPco9O/s0DwmdDi6HD418ffPAvMT4GMSu6nKfFb9wty8E/gnv+r8urn5EfAk
sI9P0Plz0d1q7x47/ga3ZofA9l9NNTRlr9SxLLV9Ba+BNVg/M38Z/gv2FvjJ
f+qflByzAl/k+v+EXi//JubDRGrfJTA/ZofEviMxphJ4RmJ7Hrse34P3VyVy
TA8QY1fVty8ZUwLHbJ54bjPHG6t9XmJfB8wA7ID7oe+NoeO3f0uulBzjAt98
KTFWUQedm5jvnKKrAuMZsxLH4plzYFtzE/saYBZgF1fk9js4VkXya4ljnewR
YFV7peZqMufAong+YqPsQWAd4F28W97xzxXP9bxkjAQc9uXE2An3xPPPTDyX
LlPbPXr/DdS/Wslr6JeKMQowcfjBYBeDc/NEuYe9dX6T1Fzzq8EsMtuf2A7s
8ez16Ge40Ojklon3V7jLfGO4TjVSY4Ho8D0kX5sbF+RYzcJeZK5ik2CbwPmH
g4tOwPb+Dn0amAsK3oRPjm8OR+5MtdVOjSViA+yJLZWbN809VFfb1blxYfDh
nSUPyO3H4M/sUNgT6Ao4yO11/sbMfCi4s/DDm6XWdRfrWIfEnK2jIusQno/r
dwgcEz88tz0CF/0sHdtP7T9ovJ6BubXwy99O7Ivhk9VTfcfUXFY4rQ2YK6nv
FQwbLHt+4nsFAwcL5x3wLuDHgsU1TIy9waHaXXLHyDxa9iD2ImwGbAf8Sbgu
2KfY7nAm4YOgY9A1cIB6puYotott08FdfDQx1jGTeGPm/AWwqwfVfhjYS7I1
TLMVs9+6X+vYRLXNUJ/71LdL5r5wpOBK4f/hW8AhJb6MTY5tDgYJFglH8L7I
/j/+HZwZYhj483ALP2IPDMy564Q/npjLWEXygZn9N3wvOIPEP9n/iMODgX5b
nD9B9X66nxNS2/zY/mCWYJdwch+NjJHD1YXT+GDkeAD2OToT3QmH9LzUOhXd
Cif3otQc3imRYwZwe7GhsKXAa4jNgKmDrY+T3F73e4jKvWXH/E9KHAMm1ndK
2fzXhYnrcADHZObg9okdI4abexY+iOonl82PhfO2ODI+BhcOTtycyPgXXLnl
6MrQMaV7JFfVOceXHfMk9nloZm7PZpXfUr/fsWVzFuAuPCb5lbJ1wMOp9d/S
yHjbf5JnJObOhZL/Uf25xNw69nD2c3J2Logd0ya2/WHid4EP1R37kfhD2ToK
rhgcLOLrvCPyKR7XsVllc07g8sDhvDE2hgqWCgcELsiLKj2Yi6mxUu75lMz8
RbA8rnFsZswV7JUxT8tso2Kr8k6I12ITYxuD14AVVhLnda0v9Pl6/IeSMSu+
Nxw/+EczCv/h7NwclNnYF6p/nxg7AaNift3EnAnMYeT7jGQOBuaMwh0lfk8u
DJjhLcV6mh84h4j1Rw4VOCZ4JlwA/Bf4StiXI3TuWfgfkmfyDVR/B/wpNCeA
8eBcnxHafoWLDX8KLAFMgdhFb7WfXfhD2+eOT8/Qtf5WKWfOOYDPA9/n8mL9
vxU4B+yIzDlL+FNzA+cyVc88V9eprJDcU+2ngzOrPeFecseTnwyMhZ4uuWvo
+PIgbPPMvvZEff/lOj9PbFt9HziWAp+KXDpywq5Pzfl8ITKGCBcUjvvTkTlX
cN/hhE+LjEnCFb8THzEwB5X5jA2NLQ3Hv19qHxFfETyWWCI+M74z+CKxTeYz
2EPVYn3jY+Jrgs/DxQQPAvuCU/h1Md/hOuxfzEdyrhZGju+RizU2NdcBTivr
mZwzcGXwZWLBxCfJRYBjdGXqnL1ZkeOt5PKR8/BS5JgiuRDk5IA7gz+Tq0M8
EO4unKkBqXMUF0SOB5K7OCh23Jr4dXd8qdhxaeLTXTPHp+HygmGzn2SJbdvv
AseyyKED1wbfJt5GDkOX2Px0chvIgXsjsk5Bt8CRfjMy/s/8xyfENwQDJR+C
HJ8TI9vj+LP90UEVczjgcpDDBK8ATJvcJmIWB0bWyeADh6fG1sBswW7bqK0C
1h4YbyAm0jqyTQPeAKYCtgJnDu4cNgG2Afk18GVaJ+ZKkHODvY8NhS1FDlG7
1D4uvi4xIGJB16XmohHD5XsMTZ3rM1b3P5G9N3eeJPmSw1Pn6MCTwsfC14Iz
ujZ2/hxcUjB++BFHBsb+wc+wTYmpETsFTwQrJCYE/gCeCDYHRg2eg/+H7YpP
10vj3Sx5XuCcwhvUfmPqe4FjyHzCxsHW6ag+32bGU8ndAjMHD3oxdawYzG77
1DHdOpFjCtjDxOiqR7bZsWeJ6beI7HNh3xCzbym5XWD7hxjsoZK7BLaH8b/g
ipHDUx97WfdweuCY7N6Z/TdisfiMjVL7VPhW2Mhl7Ce17xY4Blkvc0y4ZuSY
AvY3PiG+IT5DnNpfnRh5jz9f8qGpbUFiAOBLYBBgEeRzkTuHvYjtR8wQfASb
D9uP/CpyDffI7PsQE9szcwxz78jzD/+AmGWTyD4m/ggx7nqRMXjwUWKYjSR3
DoxPzEgd+8amz1UfkToXF50yKrE+YS0RUxuH7ZQ6FxgdMzoxZ/3i2DoF+2xS
Yu4AMXL4OHC0B8Teo9DHk1VmlqwD4CcRs7g4MqedWMadibkpxMDY79lPsQ2I
yT2ktjtSc/vZY8cW+xu2CjHUB7HNEsdmyeGE7wUHGC5whZhO5hjLJZFzMFi/
5BTC+yEGSK5hS5XRqnfUeLeq3pwYVdkYWbfE3/8y9iLJfyXOYVgU2SbANpio
Y58HzvGFXwMnAG4AY5B/Bn+tD7paZUvxPa8qG6MifsB8HIBultwxNSYGNkYf
vvfRmbmcf6FDmV+pc4XhtLHfj0+dm0COJP44OQ7wKvHRyX3YqD6jVJ+qe7wm
ccwvCx3TIRbYPzU3Fo7sQGwx5kDJnBb03WWpuWxwctB3xADz0DEfYoPgU09E
Pufiwj7BdiQmfK/a78vNo2UPG6S2a1NzaeGQoF+rZd7bv1ZZmtoeJReD772d
6nfn5tFxD5czF7EJA+eEw18ELyLXghwE8Cw4QPBWwYTAhsgphNcK5kV+wtWh
83rAILD3bk3MhSTGiz2DvQgXghwb7DtyUuDZgsmAzYxJnXsN5xB9h30L1gDm
cUrh/+wcmGNBvJccFnisYDhgOfCf4MCi89B9PN8z2MOSr5P8fGLsiRjwU8X8
vDBwziS5k2CWYJfkHG6XGUMHS2cOk08JBg8WT44u+gx7vU9gTiHcQjAuYq8j
Q2NfC3TsgMCYP9h/LbW3l3yH2i/PbdNj208s7DMwXbBdcpbIhwcjBStlDrOf
7pR4vFuJpeeOYRLLBDNEX8CxhGvJfxKQv0U+JbYOObPkzsJZhbs6ofDXwMTB
xuHIkk+6MHNsgpgBsQM4s+S9kP8Cl7ZDbB4ffD5y98khuTU2Zwvu1vzMXCxi
CMQS4HDB5WKN1yvWP9gxOaTkkrJmWbtTCvtlVz3fYex9xNZzr0nWJjmBu2Xm
B5F7CocVLivxDnJd4aziH8MZnRabr4z9Acf1udicIvrDr8VWgAMDF+aKzLFH
4ifwDdCnB0TGMMASsFfgWoB5rMuMmYCdgGGAZWCfwN0A71hb2E/8lwD7fZib
Mwx3GJ8Nf3i/1Fxj+J0XZ7bZsd2nF/bcu5nnDzEaYjWdE3N54QTD1yF/E64v
MYAqmf8PAl1HDhS5UODvcCvhCF+Wma9KrjM5Q+QOnZA4lsp/SJAv1SlxrgY5
0M1T7xdbc/Mrtgfh3B4Ue47jjxJPIfeYnE5yO+FH4+t/X/i/cCjhUt5c7P/4
FPgWcHTJL16ZOBcXzuxY7JvM2Gabgo9xiNoHV8wJ7ZBaZ/IuscGwxcZltrV4
Bp6lR2LuODEe8kvxZ8hlJkeVXFX+H4HcHXQE/GbWP9eCQ0EuyEuh8x7JeST3
Ef+eXEVyXsl9RYeiS4dXnA/E9ck1G1bYeyk+WcWcPvgz+PfkvqHP49z2M7mG
70pOc+s3cvXwIbbN/T6OqjgnhNwQcmBGxN4j8aeHZ8bSjyre1+2ZcxHIkSb/
fWsOSex3yvnkMJwXG4MBHyB/iv8+gKMOl56YBbGDeaFjGWCGp0aOYYMljs/8
rHWI7SbmC0yrmGPweGYfD19vVMX6v0VqruxklUckf5ubN8uxKZn9Q2wFctDI
RSPnZnHsPZj3D6d/Vmy+PvcHh5tcSvKd4XYfHjvPk3xP/jticOZ745vAF0Wn
odv4Dw3+TwL8hlgm//nAfz/wPOTmkdNFbhf3yL3io8DP6KlnHF1xzgJ8EmLc
xLrhiLyUmdMKtxUf8dHMmBfYF+8E/gQYHFgcnA24K/g/7D1wQOCCwNmFuwtn
dKrqd+t691TMUR6nsc5IzEWAk0D+D5wEZDifXI/8K941x+h7JP5sxf+5AH8N
e5yYCPkMe6bGbE+OHPMHyyX+BvcLG/j7zPGCi8rO2SV39xON9XPgY8QPyHMG
yyXnityrryo4Z3qusuNr5O8SmwCDJ7/3qtS+Krn38HG/SxxLgvMO952YErEk
bHZsd/AnYglwjOEal5Ot9MitOanEX8CriO3BiYYbvTk0tgPGs4w5VuAL6Hx0
P/g6sQU4UHChiAfAhYIDDBeYeEFdyUNC82+IF/IscJDhIr+T2VYHh0cfP5E4
9oRNg20D35z/SiEnmdzkX0LfK/f8IRhs4lg0MWn4oVPZrwPbNNg2zybmdsPR
hk/6duZ4AdzYy3L7iEeq/bDI+c3vsYeVzO29MjdnAO4AMQpiFUeEtjWxOeFD
Hx4aC8U+xE4EowG7+SQ0dgNmAnZCTAxsEMwG7GlFaCznreL6+KzwY4ltwcUA
fwWH7Rga+8Xf4hvy/wlwLeFAwoWsq/PbBsbwwfLh4/PfNeTMkTv3emLuAfYE
3NkbYmOB5PiR6zc3c+yImBuxt7cy+3rEibBv3s/su8I7wR4gv5/4JTEq8vXf
KK4PRxSuKDEKYtU9I8cuiLkQeyGGRyyqejE/4LzAfZmXOb9ucxGLfDOzb0oc
B/sNjBSslBgcsbAXEnMjsG/gCz+ZONaKTYxtXIqMvXPpVRXH/PDv4dwQC4Sv
AZcNn/X3zPF4uKD0+TGz/wb3DExkS2a+B9w1MIOfM/tbcNvgmPydmUMOlxyO
2QuZ10AeOebE2mCN/R0a82XtsSbSyDEz1sorxfyCowI3kZjdzpFjXMS64EvA
XYUjsCkznwOuHTH//0n+ILO9hs+D7wO+OTuyz4vvC544N7KPi6+7KLNvhI+D
r0OMilgVMSJiRYsz+z7MR7AU8M4lkX1UfFX4DnB/ieFsyIznfhDZZ8N3I+aE
LUZMi9hW48TxLGJoxNLgR8B95ZrrM+8xf4TGyLdi5blj6WA27P9gtmC3MyP/
nxUcuKsjc8rglsHpGhuZowVXi3wucpSH65x/M3MQ2A+nR+YmvJg4/wCOJVzL
pyTXDowpgS3BMT2jwF9Zy5XIXBQ4KWsqzifjPxjghPyZOV+NHHNiLH9JnpLY
98FHxVeF0zAl8N6AL7mheB4wafjvcPjhfHMPX2bO2SN3D07NzMwxZmLN+Fzo
tx9z857hP8/KzAEcGJlzB/cOPi7cd/bANejSzH0X4zNnzmfkP0vggJVU/zEx
1s0z8+zkR/MfIsSkyrnP4VxyZnoXeBS5JMToqqW+H4LfcMLghu2YO/YPJgs2
i/1PrhuY2K7YSpGxBDCFAaH9BXLNsMkvyfyN+e+yuYG/Pf9HRqxsWeD8duxh
ctHguESZ/R849GB2dXLHP/gPCXzW2rn9YfY8MASwBOYwsQcwfOY2eC7/CQHG
A9ZDXg2xRfAl+KHgu/yHHBgMWAzxIjjKYDpgO8x5sGliGqwFcpLIgQIDBguu
lrsvmC/YL/E88orggJ6dOm8Drh86lHxg/l+H2Bn/kdM5NH7N/x6BiQ5T/zy3
LUuMg1gHeBfY4NjQ+gxOCTYEmMHkAv96OXDMg70hyz23+d7EOsAbeWZisFVT
c3fAzomHEBcBDyOvnRhY58z4F3m3YDbdMu8p6DNiFuw1zAHunTnK3CBeSE4P
HMFz1FY1d+yEGAixEPhtYH0HRf6/C+J55JzhA1TPrdOaRdaR6Dp08J6R8VZ0
M/Ez/nOEGEPN3Dob3Q3mCvYKJ2Si2t4NzRVhj2sV2Ydk7wPv5j+W8C/3Sswt
IvY7KjBHlvgIOVDo+0tSxw/IOQLjGZg6vglHmxjWBanjK+QQkSN9TeocU3KS
iFkRu8L+hkNOTtnozPgqXM5bQus//A9yyOHcn57ZZoK7jL2HLYW/Qe46+el3
FPY7ObDY2LvlfofkpcAZ5N3yn07koRATJzYOd4lYLTlIhxR79P6RY/bs3fyf
DVxPOJ8HFz72fpExE3xv/IsfYmP8YP1wQsjJwh6AK4L/Qy43OadtMu8VxO7h
B4wvMAVsCTAUsAZsPmw/fG6wmbcjY19gYJeFjkeRMweGd2nqPBe4I+Dl8N3h
fPHfBh+G5oKBj5B3i8+O7w7mxPwHYwOLWp25PzFJYpOrMsfSuhX2Gv/JRB4v
Pj6+PvEF/uMAH3733GsM2xGMmbUHJ4o8JzB2sHZsmt0j20TYOttGjv2yf/N/
KuD9cOjguFRS8yf47xs4JfumtrmwvcBwwJo+y4yddS3sxRsT719gjmCPKzL7
k8QciT2Cj7OnwOFLU3PUOH9haO4aeDm5P3B8tk0dj4AThg0WpfbHybPHx8XX
BY/nncMB3KbA48klwkbeLnX8ipxxfL6dc/9/J7GSeZL7ho5P8T8T5Ki2Su1P
kmcOZgB2QLwBTiAcoTA1v5L/ouwdGF/BZugS2cbBloCPQY40GNZOuX0efB9i
fsT+eDa4isQvyNeAEwI3hJwt+MP8pwT/DUlMlNgo/3HF/4qAUYBVwGEjeYWY
CrEV9hBiLXeH3lvwEeDgYePiOxAfJO+M/LNb1bdKbryVmCKxReKX5GiDqd6W
mk9BTgY2/IWp3yVcK+JB+0TGWF6PPGfBXliznVVvH3ktE68mZ4ZrgO3CfSQW
yx5HnjExFWIrvQLjScyRlyPPeeYOOY78dwgxTmKd6Fpiw28G5kGwpuHqgSGw
1uHP8D9IcLDhYv8f6wz6Pg==
          "]], Polygon3DBox[CompressedData["
1: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
5kxtfeX4/wPq1r91
          "]], 
         Polygon3DBox[{{1993, 1204, 1380, 2550, 1871, 1872}, {2499, 1163, 
          1016, 1015, 1308, 2053}, {2520, 1232, 1105, 1104, 1446, 2154}, {
          1994, 1205, 1381, 2551, 1873, 1874}, {1883, 1882, 2557, 1391, 1392, 
          2558}, {1874, 1873, 2552, 1382, 1383, 2553}, {2505, 1172, 1031, 
          1030, 1324, 2062}, {1999, 1208, 1389, 2555, 1880, 1881}, {2084, 
          1347, 1030, 1031, 1348, 2085}, {2000, 1209, 1390, 2556, 1882, 
          1883}, {2167, 1459, 1104, 1105, 1460, 2168}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rtL1WEcx/HvUTOtNMdaCmkuChsVcXHxMuggGCUIEh3qqOXlKLgFShQ4
mLaoEVRDi4FFudpfYOb9Du5BW+Dl9Sich/fn8709l/Or7OxuyWUi4rN1VBCR
9GM8xMzFiArsLIwooW/SFXgHr2MN3sJGnCyNGFT3gK4riag3qJTP8q/l6lJO
rEn9kNgrvoMeS/vhFPbgJxzGb/he37i6X/Q7M7/qv8f/5meccY5/VhSxzDeL
5+g/dDeupHm4ir24hmvFES3qpq11fudCxLwZVfwGPyT/xdzvYs/1bIq1yb2g
t+g+3MZ+3MEB3MUNfe3qZq09ft/cn2bc5/f5OTN/8B/ca4l/Kz5BL9KjOI95
/JjOjpM46+5v1I3Sre7+VP9Dcx7J58Ve0m1iDfwTfkRtDd1O38UGrMRqvIa3
075m9qq7Qf8Xy+g/MecqnyuIsz//QL48+XR2q4zewyvpvfAybuEl3HbvLG1s
HHuLf1hrznr6Xugs/Te9O2+76MJVS1usoGeKZdQaS+gXm5IdRDrOgYKFzPl3
eQqHH1cL
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNyzlOQmEYheEPQVG2oIlclmTigAMOC9DSjdAIKMO9jI6N2LkPNTEhsdPC
WBhi5VO8Oee83/8nJ2cbp7mI2ESuGLG+ElFGY5mT54WIC31L30ZTb5ciUm8X
8I0W1+EyPY8fXHJdrq8X8O5vYl/xA/vefsQnV0aH37GHbm19lXtBlevau3Lk
Vpcf/J7cR+p2IJ/xyvfsmn6ITO9xY/8W8Ys+l3ITfQlzDLiMu9aLmPlbsYf8
jf1gT/HFPckxfyRv3Ub6Gv+GY25iJ/LO7Q//sxEyqw==
       "]], 
      Line3DBox[{1800, 2477, 2478, 2476, 2484, 2495, 2794, 2044, 2031, 1152, 
       1801, 2033, 2595, 1967, 1802, 2035, 2596, 1968, 1803, 2527, 2597, 1969,
        2045, 2528, 2598, 1970, 2046, 2666, 2036, 2439, 2441, 2475, 1971, 
       2466, 2789, 2442, 2443, 2440, 2469, 2496, 2792, 2047, 2037, 1156, 1804,
        2039, 2599, 1972, 1805, 2041, 2600, 1973, 1806, 2530, 2601, 1974, 
       1807, 2531, 2602, 1975, 2048, 2667, 2043, 1976, 2453}], 
      Line3DBox[{1808, 2049, 2497, 2668, 2219, 2050, 2498, 2669, 1809, 1161, 
       1810, 2603, 1977, 1811, 2532, 2604, 1978, 2220, 2725, 2051, 1979, 2221,
        2726, 2052, 1980, 2222, 2727, 2053, 2499, 2670, 2223, 2054, 2500, 
       2671, 1812, 2501, 2627, 1813, 2605, 1981, 1814, 2606, 1982, 1815, 2672,
        2055, 1983, 2224, 2728, 2056, 1984, 1816}], 
      Line3DBox[{1817, 2057, 2502, 2673, 2225, 2058, 2503, 2674, 1818, 2504, 
       2628, 1819, 1171, 1820, 2675, 2059, 1985, 2226, 2729, 2060, 1986, 2227,
        2730, 2061, 1987, 2228, 2731, 2062, 2505, 2676, 2229, 2063, 2506, 
       2677, 1821, 2507, 2629, 1822, 2508, 2630, 1823, 2607, 1988, 1824, 2678,
        2064, 1989, 2230, 2732, 2065, 1990, 1825}], 
      Line3DBox[{1827, 2066, 2067, 2733, 1826, 2068, 2069, 2679, 1828, 2072, 
       2073, 2681, 1829, 2075, 2631, 2534, 1830, 1337, 2077, 1831, 2682, 2078,
        2079, 1832, 2683, 2081, 2082, 1833, 2684, 2084, 2085, 2735, 1834, 
       2086, 2087, 2685, 1835, 2509, 2632, 1836, 2510, 2633, 1837, 2511, 2634,
        1838, 2686, 2088, 2089, 1839, 2687, 2090, 2091, 1840}], 
      Line3DBox[{1853, 2112, 2111, 2691, 1852, 2110, 2109, 2690, 1851, 2107, 
       2639, 2547, 1850, 2545, 2638, 2105, 1849, 2543, 2637, 2103, 1848, 2689,
        2102, 2101, 1847, 2738, 2100, 2413, 2099, 2414, 2782, 2416, 2415, 
       2465, 2098, 2468, 2097, 2467, 2790, 1846, 2083, 2235, 1345, 1845, 2080,
        2234, 2734, 2536, 1844, 2535, 2636, 2233, 2076, 1843, 2533, 2635, 
       2232, 2074, 1842, 2680, 2071, 2231, 2070, 1841, 2688, 2093, 2092, 
       2454}], Line3DBox[CompressedData["
1:eJwVzMsuQ2EYheFPVG11SHRgjjoUwVAaoa0zE4qY11SIe3BBBDNnVcxdgKlj
RJh7DN58a73r37u7ulfZbYiILaw0Rwy3RIzgMYkYck8zEV1Ytg3qeTzYTrhf
eYmf1O9xzP1wi9y3u6nX+QIWuC9ug7vTJzDPfXLrXE3PytvoxJztmW+S95HG
rTcdbjuebLPetMptuLElbhXFdMSMrVHeQQrX9iPffMhl27h+hUPunStxb25F
v+THUOReuTXuQh/FNPfCrXLnep+cwxR/wPXIvTizDbj9//+W/wDuZSnb
       "]], 
      Line3DBox[CompressedData["
1:eJwVz7sug3EYgPFXIiluQNlcgFODOCWEaEQikXYhNiOJDk1sFmbcgFnvwOC8
0TozqHMVg0tgED/Dk/d9nvf/DV/LXC6zWBMR05hMRHTVR3SjXBfRau40RBzr
E7yNt+Pevquf6Hk+yh+wpxW1KYzxR+xrJZ7Bt7cd/Ek/5Uv8B53as5a0r+DM
bc1s1O8wb+/Bize95rn7ull16zP78erWbK5iuzZiwxzAAgZRcT/w/sK3yzzN
33CoXWozGOdVHGlXfBa/3qb4u37NN/kWvrSC+aEPmTf//2hv0ssY1j75iHnr
lrX/ATztNlI=
       "]], Line3DBox[CompressedData["
1:eJwV0EkrRXEYB+C/jeveDcU1FfINDAsritRNicyXsJB5QYm4yLC3N8XHMHwF
83TZkHwJFMpzFk/v+f3e99TpVI/Nd8/lhBBmGY2FUBwPYZsSXvJCaDZneEuE
UM6ImyJ5iyTPbo7Nc7sjc9i+TZflTPenG9L9moPykz5FWvejS+se5QPPh+wz
YFep/2BT3uDBTZM5TSP9bpL2WdblQu7dlJlTpHJD6HOT73mNAu7sG8xJXr1X
Sq+buLxKgls3VfpT9uRdetwsmxlWuHFzYv/tucvuK/pm+VrfSqfuM/pG3ZXc
QoeuQn5nyW6RS32tOUEN7dG/jf4HC3KMCzf15jh17PAPZoM26A==
       "]], 
      Line3DBox[{1887, 2482, 2483, 2481, 2488, 2512, 2797, 2133, 2123, 2611, 
       2004, 1888, 2124, 2612, 2005, 1889, 2125, 2613, 2006, 1890, 2559, 2614,
        2007, 1891, 2560, 2615, 2008, 2134, 2694, 2126, 2436, 2448, 2009, 
       2451, 2787, 2449, 2450, 2437, 2513, 2693, 2135, 2127, 2278, 1215, 2136,
        2128, 2279, 2753, 2010, 1892, 2129, 2280, 2754, 2011, 1893, 2561, 
       2616, 2281, 2012, 1894, 2562, 2617, 2282, 2013, 2140, 2696, 2132, 2014,
        2463}], 
      Line3DBox[{1895, 2142, 2514, 2698, 2283, 2143, 2515, 2699, 1896, 2618, 
       2015, 1897, 2619, 2016, 1898, 2620, 2017, 1899, 2700, 2144, 2018, 2284,
        2755, 2145, 2472, 2473, 2474, 2285, 2756, 2489, 2490, 2146, 2493, 
       2491, 2492, 2798, 2147, 2137, 2516, 2695, 2148, 2138, 1225, 1900, 2139,
        2621, 2019, 1901, 2563, 2622, 2020, 1902, 2697, 2141, 2021, 2286, 
       2757, 2149, 2022, 1903}], 
      Line3DBox[{1904, 2150, 2517, 2701, 2287, 2151, 2518, 2702, 1905, 2519, 
       2650, 1906, 2623, 2023, 1907, 2624, 2024, 1908, 2703, 2152, 2025, 2288,
        2758, 2153, 2026, 2289, 2759, 2154, 2520, 2704, 2290, 2155, 2521, 
       2705, 2291, 2156, 2522, 2706, 1909, 1235, 1910, 2625, 2027, 1911, 2707,
        2157, 2028, 2292, 2760, 2158, 2029, 1912}], 
      Line3DBox[{1914, 2159, 2160, 2761, 1913, 2161, 2162, 2708, 1915, 2523, 
       2651, 1916, 2524, 2652, 1917, 2626, 2030, 1918, 2709, 2163, 2164, 1919,
        2710, 2165, 2166, 1920, 2711, 2167, 2168, 2762, 1921, 2169, 2170, 
       2763, 1922, 2171, 2172, 2712, 1923, 2525, 2653, 1924, 1246, 1925, 2713,
        2173, 2174, 1926, 2714, 2175, 2176, 1927}], 
      Line3DBox[{1940, 2199, 2198, 2716, 1939, 2197, 1494, 1938, 2195, 2659, 
       2577, 1937, 2575, 2658, 2193, 1936, 2572, 2657, 2191, 1935, 2768, 2190,
        2189, 1934, 2767, 2188, 2438, 814, 1739, 816, 815, 934, 933, 2791, 
       1933, 2187, 1479, 1932, 2185, 2656, 2569, 1931, 2567, 2655, 2183, 1930,
        2565, 2654, 2181, 1929, 2715, 2180, 2179, 1928, 2764, 2178, 2177, 
       2464}], Line3DBox[CompressedData["
1:eJwNzskug1EYxvG3Im19jUZYGhLXYqqp+OoKxFAbEmtrESsRQ4t+1P1oogt3
UlNNv8U/7/P833NOzvTWYXqQi4gUT4WI2lDEJgaQ4jgf0ebX5Q3k0E0ixvDI
XxZd5F70UTxwI+Y+/uwukHFlvY5f/Rwtbljfw4++5o0q7vmMW5FX8W03ZU7i
lb+zH5cn0LdbNo/88ZZflJfwxXecLaHJn+mfeNYTNLiiuYsP/hQ3XF7fwbt+
gmtuUN/Gmz7v7Tlc8S1uRp5Fz65iLqAh/wNDCCrP
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{978, 1265, 1145, 2720, 979, 1266, 1153, 2595, 997, 1161, 
       1010, 2628, 1170, 1025, 1333, 2681, 1179, 1040, 2635, 1334, 1188, 1051,
        2641, 1357, 1196, 1059, 2646, 1380, 1204, 2748, 1067, 1396, 1212, 
       2612, 1075, 1220, 2618, 1086, 2650, 1229, 1099, 2651, 1239, 1114, 2654,
        1471, 1249, 1127, 2661, 1472, 1257, 1135}], 
      Line3DBox[{980, 1267, 1146, 2721, 981, 1268, 1154, 2596, 998, 1162, 
       2603, 1011, 1171, 1026, 2631, 1335, 1180, 1041, 2636, 1336, 1189, 1052,
        2642, 1358, 1197, 1060, 2647, 1381, 1205, 2749, 1068, 1397, 1213, 
       2613, 1076, 1221, 2619, 1087, 1230, 2623, 1100, 2652, 1240, 1115, 2655,
        1473, 1250, 1128, 2662, 1474, 1258, 1136}], 
      Line3DBox[{982, 1269, 1270, 2593, 1508, 1271, 1272, 2597, 999, 1300, 
       1301, 2604, 1012, 1316, 2675, 1317, 1027, 1337, 1338, 1533, 2734, 1341,
        1342, 1539, 2736, 1360, 1361, 1549, 2742, 1382, 1383, 2608, 1553, 
       1398, 1399, 2614, 1077, 1222, 2620, 1088, 1231, 2624, 1101, 1241, 2626,
        1116, 2656, 1475, 1476, 1578, 2765, 1477, 1478, 1137}], 
      Line3DBox[{983, 1783, 1784, 1273, 1787, 1274, 1786, 2795, 1510, 1275, 
       1293, 1276, 2598, 1000, 1302, 1520, 2725, 1303, 1013, 1318, 1526, 2729,
        1319, 1028, 1339, 2682, 1532, 1340, 1535, 1345, 1359, 1346, 1541, 
       2737, 1362, 1716, 1363, 1764, 1550, 2743, 1765, 1385, 1717, 1386, 2609,
        1554, 1401, 1402, 2615, 1078, 1430, 2700, 1431, 1089, 1440, 2703, 
       1441, 1102, 1455, 2709, 1456, 1117, 1479, 1480, 1580, 2766, 1481, 1482,
        1752}], Line3DBox[CompressedData["
1:eJwVzr0rxHEcB/CP3BkMZm5QykDKv3BnJ3W2s3lKBhyLYnNhpegWi5PBxmBV
FNMtt3AlZfCUZwMT3es3vHp/Pu/v7/vr2zU2l59tiogC180R+ZaIEe7TESW5
Sr014sm+bt6gzTyj+0tFVO3t9i8OdB3yx3965C+Hul6Z9m1WLtv/ZS45c/eF
B92rTLHFHZtsk+OEAabdGZUFyty4NymnWHI2IWuMc+VsVw5yylDydt+s6Vfk
mf2NdzKc68v6b/Oe7JQXuop52NuP5I69W39svpQfPOo+ZR/7VOhngcXkjb4t
ymfmubU3AGIIN5A=
       "]], Line3DBox[CompressedData["
1:eJwV0DsohWEcwOFX+JLFYEPJYBFlclmdgYnDzGKhTrEwiJUyUzKSXDpYJJuU
+yWXcHTKLZfIaGFxeb7h6fe9//dS51R093f05YQQUmRzQ6iLQliknrf8EMb0
lpfCEEb1w6xBl2ikyPpc33l15kxPKTH/ZMGsTL+8XaXfpM2qNcoLIaEj1sGd
Bx65J80yq/Ha/opGTPLEBAU0cWV/QxOkvNelF3QyTTObtDBsv1cv43fc69Fi
WtmijXFnMnrDszPXus0Oe+xSyl88s/+rP8y5V677ZvO+k37fmk5ZV5qv+z7Q
Q445oobZ+L9mhlqSZNw50Xbu3BvULAMM8Q/RekNN
       "]], 
      Line3DBox[{988, 1281, 1149, 2723, 989, 1282, 1157, 2599, 1003, 2627, 
       1165, 1018, 2629, 1174, 1033, 2632, 1183, 1044, 2637, 1367, 1192, 1055,
        2644, 1368, 1200, 1063, 2648, 1389, 1208, 2751, 1071, 1407, 1216, 
       2753, 1081, 1421, 1225, 1092, 1448, 2706, 1234, 1107, 1463, 2712, 1244,
        1120, 2657, 1485, 1253, 1131, 2664, 1487, 1261, 1140}], 
      Line3DBox[{990, 1283, 1150, 2724, 991, 1284, 1158, 2600, 1004, 1166, 
       2605, 1019, 2630, 1175, 1034, 2633, 1184, 1045, 2638, 1369, 1193, 1056,
        2645, 1370, 1201, 1064, 2649, 1390, 1209, 2752, 1072, 1408, 1217, 
       2754, 1082, 1422, 1226, 2621, 1093, 1235, 1108, 2653, 1245, 1121, 2658,
        1488, 1254, 1132, 2665, 1489, 1262, 1141}], 
      Line3DBox[{992, 1285, 1286, 2594, 1515, 1287, 1288, 2601, 1005, 1167, 
       2606, 1020, 1176, 2607, 1035, 2634, 1185, 1046, 2639, 1371, 1372, 1545,
        2739, 1373, 1374, 1551, 2744, 1391, 1392, 2610, 1556, 1409, 1410, 
       2616, 1559, 1423, 1424, 2622, 1094, 1236, 2625, 1109, 1246, 1122, 2659,
        1490, 1491, 1586, 2769, 1492, 1493, 1142}], 
      Line3DBox[{993, 956, 967, 966, 2796, 1517, 1289, 1290, 2602, 1006, 1310,
        2672, 1311, 1021, 1326, 2678, 1327, 1036, 1350, 2686, 1351, 1047, 
       1375, 2690, 1376, 1547, 2740, 1378, 1766, 903, 1552, 2745, 905, 939, 
       938, 2793, 1557, 1412, 1413, 2617, 1560, 1426, 2697, 1427, 1095, 1449, 
       2707, 1450, 1110, 1464, 2713, 1465, 1123, 1494, 1495, 1588, 2770, 1497,
        1498, 1754}], Line3DBox[CompressedData["
1:eJwNzT1LggEUQOHb52A1tEhDQzY1JuLUH7A1IrfMaCmjcM2iQYiGVFoKxGwr
IdeWmoV+ghBCNUbU4tQQPcPh3Hvu+5HaPlw7GImIdXyMRWxMRuTxNRFR4wu8
JiK+7XVzA7PmkjbFP95Z4CE6Wor/tGX+RVdL88x4RI5P7aO+sWqe04pc1RLa
Na4wjUdti4soe6bAm2hi4FbifVTd9ngXfT3Jbdzi0u1cO+MV/2rxvN7Tbsw5
7YEXtReta85rT9y0L+nP5h2tzy0to93jDlkc4wRv7hX+xBHe7f88TS3d
       "]], 
      Line3DBox[CompressedData["
1:eJwVzStIg2EUBuAjXoKIwbZgmEuLmp1mtQmDWTdsbkOLzV0YDATBYBGdiFFY
WRwmm2gQxGQQXBgIQ4tBFLZn4eU95zkf/5/Ml7dLExGRleJURF/KMxFv0xEl
3Zrlepe/y7U5LU/8zpsce5UUe2BttmF/lBP7Ir9iq/Z7OWYJdsaW7V0ZsH/W
ZJf6YvyP8Y13dN5+4Lau1+SFJ/mtZOwFtx3d4Dmd4Ddyat5yq/JNPc/O5c/c
Zit6OOkd27f/2JfkmzXZHvuyL0iPVdgn+/XdOVbXNXl2O3Srmnu8oo/kwzwC
V4gxlg==
       "]], 
      Line3DBox[{1134, 1256, 1780, 1779, 1470, 2660, 1126, 1248, 2715, 1469, 
       1113, 1238, 2708, 1454, 1098, 1228, 2702, 1439, 1085, 1219, 2699, 1429,
        1074, 2611, 1211, 1395, 1066, 2747, 1203, 1713, 1715, 1714, 2783, 
       1058, 1195, 1712, 1711, 1356, 2640, 1050, 1187, 2680, 1332, 1039, 1178,
        2679, 1331, 1024, 1169, 2674, 1315, 1009, 1160, 2669, 1299, 996, 1152,
        1264, 977, 2719, 1144, 1263, 1755}], Line3DBox[CompressedData["
1:eJwV0D8oxHEcxvHP5c+vTLJKMbBIxitMOgqT6wwWg03pri6hLpMM7haDhWI7
4ylJpiuTYmBguYWy3KWULCy61w3vnu/zfj6/um5kvZDNpyJiFcXuiE/s9ka8
9UTsyPO+iG25wX+g6j2JJ/7RzRrXwBj3wF1zy/ozjvRhvsrN6vf44iKJOOVO
kObqOODL+pL7Oyxigr/Bi/cC9uzzcg6v7kdtNWT0TduMvMW7bVoO2S46v9t7
CgmubDm3A/wZUtwll+ES/Rhb+p8+jt+uiAqX5370QbS4fa7Jffu+n6vIMhq2
Uuc/sR3qLduKzOGfbwMrBzLA
       "]], 
      Line3DBox[{1139, 1260, 1782, 1781, 1486, 2663, 1130, 1252, 1585, 2768, 
       1484, 1119, 1243, 1575, 2763, 1462, 1106, 1233, 2705, 1569, 1447, 1091,
        1224, 2695, 1435, 1420, 1080, 1215, 1419, 1406, 1070, 2750, 1207, 
       1723, 1725, 1724, 2785, 1062, 1199, 1722, 1721, 1366, 2643, 1054, 1191,
        2689, 1365, 1043, 1182, 2685, 1349, 1032, 1173, 2677, 1325, 1017, 
       1164, 2671, 1309, 1002, 1156, 1280, 987, 2722, 1148, 1279, 
       1757}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
JQL7qTYeOdpfKlLkRBD8ld3G0gd/f/8WPEjjQ4XIbD8OfDLeinwFPuOyQveV
HSIZHF1MPKvKmHj6fmo7e082RdWp0Gyyz7fPOD+Mfq0tMH8h+lBeh8F59KWN
4se2o78MB6UVow7GnGf3Qx09Ibc2EfVwA/vmUeSt5tUOFeT91gWsu5C/uW4B
KuCZtnXVfPD0vP7oKfDtamHeW+DSR87qANeBGIc1wKdG28Ju75JO8nsJ/2Ks
NQnxCZ/aSshOA/YzCmVRjPQOv45r2/vJ619jx6Ou1/yVp/6Vl479/pzWT+3a
di8S+kd3a16A/mF+Wy3aHsre5UuvA22PZ2egKezxsJUfoe2npNxe68N+Vu8u
W9hvq89bQftLTU8edoW/yy46hsFfba76cbrvUtHO6veBz6HH762Az8094X66
F5MYHMVMPN9wMPEcYbdPEezpVPWu+kXPHzGqrC9/TM4hi158m+zrb/0GWbbq
3GBkfPSahv7uNtWHmrLk73SU2zFUpvrRa1GpybrZqNX2rT3YicFck0iuKu9k
ngdkagxn2RmpMtd0cohb0AK8TKq1lOPZ6svYod0ZCH7yXd7ZDBwTv8lqHL50
m3FO5lQ08Kwdoc06m6TqPEivf/xU1/X/mbTTNM7qDS1P1eSdeAT528EmrA9o
eUGeW9BPKalxiEB//XTxS9AvukAd9lBHMtJbYA9zTScj1CzYT63TOMHeQdvP
XJOIsasX/KUq/gjfgr9X4hjc8PeC7j7gQwWP+SwGPtdvRkoDn/GtK42zDrcx
FALGJvEc5BudtPMfPlN/+ZwUYtqBOWnGs7AMzE0zfBYsRbzafh3JAp/zTu54
iT7vLWtzH/GdPdrQDj7//OESjr50YUuFKvhQ3b9fHnx2d+jWRB0djr96Evx5
founB3wOmW4/OI3O++hFpVvBN0mDjS7gpa0WxxzwVKpAlwF+ioTlnAef1YQ8
24FrxoCKB/Cfkqf+lX/jol4FPofxXtBGXblcEhUO/SuurEV+UY5nWIVgz2z1
FcawZ41paQv4zN6+Jwn2z01KN4D9dknFFPgs8IAkwt+dFyL84a/TDZFi8Dlu
U0A18LnBcX79/+Az9ZfPeipeBqjPC1fxTc71csJNs1FPjp5wmllE1+fNMmUa
mEPL1JNnYP6sNneVQn3WW8YTgbmJ12LrF9Qri3uKg6jPu3e+jkKfvz2kw4/6
9uwFNxvqc4zmuiH0pboQdq//UZ+pv/V54wNhA+T5sT1PK4BT0PGo/cCnWJ6/
EPXZd0X6JE8vLrU4D34u8tt3bRLHph8MyB9TWLP1f9Rn6m99lk3N5kN9Fi0s
a4Y9Cqv6rGGP5XO9dtTnQMdrybBfKt9cHPaLyFeuQn1esPd5GPydOCDSBX+3
nBUIRX0u7PWyAD7tIyVLgM8Xb6VHqM860kw8x0SYeEZ8LcjGvGE9YjN5TzI7
P/Ac/bF7/s7dmDcW8O3mxVxv4bZcGv3079z5dw79O3/qndTTQJ+297othL6d
/jblM/q1l+f5APT13G0SSejzpvtLtqG/Bwe4U+hD4849K+H3s7n7L8Dfqm8R
bKjjiQ9kN4N3Nm5PHMC3T+8fd2HeGMqSnsx75nc66Rt/LgdeVi/8owT5zhpV
W8hbiC59DxwvXuacB/3yQelHoH/Oxdx7sKNIdDgaa/2ums2wp1ozmMDuLfxa
olj5Vsn3wP5IzrMGmDe8NW0Ww99xox9J8Hdw5reVmDfs3v1cBHyOe3xZA3yi
8/jqO+l5I3cKz5tTeL5fqnwF87MX895M+U7dlx2Nq/0wP7utVOvGPclEc5rQ
5P3ohKk35ueZvLdNMNdXpBVGYZ5U0arPx9xZ9KaMwhy6g6GigvmzfDCBG/hn
L11pCPtXBOmMwH6PWsUE9PV95nM/g0eXwr7OBn9Gj7Nbow8lrLkyhDwOtDcy
Rv4erxIYwfxMHiyfrKPMb3p+7pA7jzw/ndjwBfIsV9J3QP7Z0Y448HLpxYxu
6P+ToT4X+m+qhErDjlwR/TVYX0kXNcOewsdUNuxeLdhahLViLFwL9oeFiOHe
Qum/zJm8x8jEsZyHvw9KiQHm5zhH7hHgE+5/TRL4vNkt2475eXQKz9dTeFq6
m63GffC3s9HkPT4/bJkM7i8BPc0TuGfOV9hpiXvnz219i3Hf4X2ldAn3oucB
0yNxT/r8ZOAV7kflC76aY45v/UK5wK6tZNXkPN9u/2oO5s4M1sOW4MVLRZ8i
8MFCOC8ec5L+1mxh5KXHkdXfkY8ljJ8R6OsxzbfzURfPBss/Qz0MF/3Ch/tg
0srjk32J+Z38V576V37gk+cj5Pnw2OhS6H9mMmcU+rMfJouBlwtEWrfCHosX
dmmwRznhgS5wrN6Ydwv2F/k7RsD+rcI+N+GnWV3ubaxye88+h7+bAozKcR80
++bpBHw2S1VIAB83TUVW3AdrjjPxrA1n4pkwx7wQ7xu8Q32T7yL6trd08R4i
1p+Zj3v7rz8ZR3GPn+C7mov7e663sTPumSe2LSrFOQvOrFaC/ih/rjHci2QG
GpUR55mL707yX3OBLSfm+C0BM08iz5Y+CjdGfnGNX0NdI2whJpN1jutG/w/M
n67ev70wJ8WGvF1Ez5UU/yauU+gv//Ulq+N94+P1OZN9nvmdTbr1OLPQhwz2
W7eiLwnkvdgK+T3LTI1RN/eHGBdAP2VoLoj6yVDm5Eeeh7t56sEeh8vpKrBH
c/eJr+BlOoNuNbT9Are1dGC/wTQrN+C417cyGf5GtPhKwd+qoZZA4LJd3DwM
68LdZb3A5/FLlVK8b2z9zsTzrD0Tz12nUiff66ZWxjrt+sk55O87yN93kb/v
IU5T93aez6yC80OiGPem7u/ntJjvdSPUh/iffSGM2dLMfGHbznyvUz7UKLSq
8x7DWJX5Xqduynyv2x+dccD2ayTDTJL5Xhcz9V7HbijhHd+VxNgz9V63fuf4
5HvdfyJ938c2tTEChJjzEv8F5nvdXOkDpyAfOPVe55nBfK/z6d/lA/0r85nv
dXV6zPc63bBWM9izK4z5Xvd6NvO97ihPayLs357IfK/LXcZ8r9t5rXRCkPbX
K4P5Xmd7nPle53ppqBn4VGcz3+vmjN6bfK/bWZ88iSerSe2knQOpIyc4r3YS
sSoZG6z8rn+uS11LJwrhovV3FveT2XvJa6MzteRayZlTKUcfkj+myzPxXb/6
dSN+vxbH8MX+j035QtVL81T1Z5X/SX9F3yvFVbq41jPIwXbO9Wfo+sy/Mn4L
1uY3ZLpSVQRRmO1T3sQ9QMTu/Qmue1JO2D5yJtfcjCAFxivunN/+he6P837m
yLcSlTujKeRYGBnsH7gktm6AzGfvz3paXEqKzk7nlMqPIIvdTD6ZS/QQu/mH
7EhvC9nqecLbKTecnIl4n3uAc4D8uKMeZBFXTqx2l7xpHYgmFWsbzuds/UIG
ky1Xea9pJacmlDXvv4siX66X373A30+q16v4NrvWktLFavu+WiaRcmdNb2Hr
TrLztXSRKL1+2GJ1y3HbS7LYaO69gaBOsnuwR3OQXjkbVnF/2BdHHiRknVhu
OkAqDGexLK/IU13ftuq6onUxEY8YCqT1UCwCm9Kh50E/wwd6Nq1gyK05UUvW
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
DfO5YNNgBT2fk8ylBw0wnwut/i6De6zJ9qIm3J+EHkvZ5NH3mrA/OXMxt9fN
jueHvo6fop+hp4jXLfE6ff/h2R+hBfnLI17skH+W7s1Ly1Ha99x5YZf3qhWc
mPN1v5tcwvw67a7aMthfZTZ0G/Y/YH/KTftL+S8y6IG/mf3v1sLfiXSKovGh
dnxaMoF8MjvPqQJ8ZnzrOYS5vXHz63rUrSFur8l6Vdw8tpvGmQqQKNsHnG/M
y5wPnC9KrV1Ex4USWjYrCXFZdc1JEHEpiY+LQ13rzv22h8XivKrixKAr6tuy
mZGT79TrzC8z9NaeYDDXNGJbJzeZt4/mz9a6aXJItYDH7D/kb0dHwGT+WPzx
1CIqBgzmmkI0DlZN8slJNPCGa90GBnPNIjrXnkzi3iYhvXFB/TmG+6lLxsA/
qWB4GX3/JLXxknktww9UHXevXXKYvodKNsVr4F4q/3NJIPZPlb79hvtp6F3N
UtyvLjs9cIGexAfXn0DPxl/GX+hzqf7LT+1wLnPNIhWB52Endc3daRvsZK4p
RGabGPyiJI02GcIvpzYvJfhVnXUAOFBz9m2vBw7MNY2sJPuj0I+f+9e+BW7f
cxYvnEbjVq5+K4buuyTeq7scfYDLYzQS9f9a+hlX8L9R8+dqvPd7KCWsQFxk
x3Szwf+lrzvnoP4phxN7xLfv8+W54P8NW4lG1CGupQGC4ENXq+4N8F/XcO+Y
NJ2Xb1qfRoI/Vv2PBuj7JKm/7LwFPL19SbkE/Ax6bffmKs1nze2f9iXQ9/Ws
3G/euKc/Devdjnv7B9usItzj7y7cJoZ9py6JD7iXWqe1m0LPs2b/NugJrdO4
Cd5O3Dz5A+cuV/QOx7lOYhu5wNsqzd9DsFOoT1sBdgb+p1AI3nrWWXTSvKUc
bUw2w6+nBkLO4Od/7pyKwGHu0E0l4JC7yzoA88oz2+21wO1HqFwMcDPfVMfA
ffjlTfFM3I+rvMUCUK+uD2pz4r73ImbnN9z/+juXOaPuRUUXLKLrJ7X+em45
XT8p7QjBK6ifsXeMPtL1lrK43XCDrreUxkx7RdTboXQ+Rbo+UxJLlZvp+ky1
xekroj7Pq8m6hXpe/8TsEfowF9eW6ahvTwTsC2n/iZ13WjjwGFjTfwY47FDJ
MkL9fKIZMsk75ncWScl6bYw6OTHyKg16PNiUeKAnTOzEK/SvdaUl19DPde8d
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
9Iu/9v37HnLsdNrL3zQPD/rxiLnSeVm2wKIM84m774Ln6CuqnUlaeAdbPTx2
D/1l47tlqZizZTOuGKL/REZ79Fyj978m1Ejh3FLPAU4rul9VCs5Zj3OXcnye
n0XXzw/FzPdV3ufM91X2htVZqCci3ALh4HvxsQ3c4Hlwo8oPzIsl1I239BxB
CQp8+oS50X+tW+pGup6UvzVbgHqQE/r9HurAr5o9mGspI9YhHrpuUDffxJZA
z66az2yYG7i3n4jAHJHoGvbRkp4fzA8dlkMfvfdjUxf6asIzIyHY6SJs7Q1/
7WcNBcGvOZr/mcHfqXcb6t93G8VY23zUlz2U+XTUD4bpmzmoG3WhVfL0PhX5
uAv9iMocuciH/XdBCqNNdD8yPi7Fh7pivuOmDOrJqihJ9hD6/vDySZYu+rNq
3ryT6MtaHLvqfv8YII2lPGvzQx4yHN7H9dRHPCI2pnbCB7YMEPuAhWcTDEuo
HWaF+y+GPibxd+y+CJ/uI1b9/Cpv4uqpaXNu7HcnsWTXa7Y3eA8tdH8xgvfR
44F9u8HDA9x7LQ72DZDCo75DPDGPGBffruQOUKPnbcVHL7WUBshNIevOsS0l
lKHsfcsytbR/75XU33ul/QOXo6voOUHM74AD6p/cnUtzZ9N1z614bABz2IPk
dZWQD7sbLgr5e/1yOJcSEOnimEufayWXJYJzQ3WSXtDnUmz3380Yp8/dZxvp
iXOfllBXNzn1UbeT9m/mjqinbEOnVXmuTyVlX+WBD/V5ZM9B4CM5j2VhA43P
t8QLi2l8qJCDPNeAj8mKbUeAzxtzq1eYe36pLXwInB98mlsGnKfejcm/78YX
r0h8wL3u3NWL5zEP7nJx2A/5EnZmXPysFjK+noxXVWtgxuX4XXYOxIVnVy5b
kmEJ+TiNbxvOfVt+8jPiEuStvJWOC6Huiu9FXLraQh4r68eq7nmvO6kvPzL8
J/R83mujk0j/faV4IR/0PZ3332R8L66X24u/T0qzbIc+HX0pbehp4mTGMa9m
3SB5FquaVsWMY9b6rbmIY8N44zYaT9KYsOwg8LyX6eBD40k+CFw7QuNJVlZF
3geeZld3L0Q9fH+oFfcJ0qoe1Yx6+E8cyd848vcx46gVX86pRp97Q5YZx+/b
jLIRx1yv7Q44t7ZjhTvO9T4m6IE48rvKheLckPKqApxb/TrgCfLwQ2KzCurH
jwgbEeSjfj8zvmpji78D57G5zPh2dYvOQnznrUjlB85FJUH7gA/HPK5OGhdK
X7lrJ3B6oZl6EPicUQ/sG2+KYSRO4cwSxcR59tHGIvAjz/rGQuDsIv/CHHqq
u26KIX+4atYMAmd1yY87oeeQzB4ZzFV7W62jMDcF/tcijnmpKdZsAv3x5VX9
W9jvUDUQwP4CqUNi6IO3/ZegD059M8i8TUqxFmaxqhvGNSfjtvncMQHgZvPK
RR14ebPGTMYteeUFB+C2q03TFXjF7Y48h7gVJ2+rA26DP7buxjxwkWNwBPPF
cbecRejvleKChZgHji12mk3PA8SrpHEP5gHLqjwNzAOHRM+y0/MAceE9vgLy
tq+eTyD/PSeY9gxO2RNTqzwXeVjttQt5SZx7NjnCnujkyoPIw+dPtl6EPWoP
TRpgzz354ZmYv02VZpWhLmqkZxZj7voxXi+Cffvu1e6Yr+4YSDZg/2KE1xzM
5Ww7Nz7FfHXEvc8H9XBhgfADzBMFq0c1gLdt/92XmCtiPbeHYv+3nYAg8B4h
03Ow//+fM/QYf+cNjZyTmM+pZWYV5yf7rU77K/RT4VUypZgb9HOlH6CvXv3Q
Po6+aXmbHfM5ZXNeKxl92Kb5RD7kx+2rWyHv9rtQF/12/YQrJ+YN6RtHXyKO
xz8IT+aBfMs0SeBmpNttiTjmCiRP5kG5+aWLwC03fvZ+xPEa75VLyAP2VO48
4FZ5cr4g6mD6R6aeT1N69u1JkAX+/IFmDOgJXKpxGXqEPYI0gf8tW4XJuuj0
aMFkHv0n4VSIerLv4rrJvNn730U+5EuYs/0m1JNro4r8yBuFJPtd4PnRxe0n
kCfni59/QN4ozDxkAZ7POTi0H/e4yzfVJudcfq/eU5hvrY1en8I84Xk4Uwv9
s06mayPy1O92+6wJOr+Sp869O3Vup89HCvnluZFtEc79VT6+B+feLNXciPwa
6bqEfkXptQgfwbnxzmMHfVa/Isnub9Xvf+gnt88cdfO1LSYyoQ8f6Qe8It+K
HMbybQYogzYT98p3qeRo1pNMzHsZ37on70nM7xSymfe4l17AK+qIQ9GsApsB
4ni19zDk5b69jVeuo+8psmn252sqKIEh20wtlkyS89b4sl7HAHkfqONfkRrH
2OArv3LjozRCfhiItfb1U+k3r45/6a2gTM+lnP+WnEAejDiwGnwfoKbrTRsK
CYhneKXG50UsjSMq7qLT6fOo7w+5SnH+nYgoX5z72DuzZfWbRjLEMu7+JKmX
LJ0zynX35EtiKveNfPv1lpSXOpjeWd5PnMtE5C+N5BMX3Zuzry55R5pP3f3a
RPfTmoYPwffds4nIvA85ElKVZN+SkHBFqp+aMy/rnZdiLplguT8cNrOJiH3U
VNg40Eu5tJeNCGsnEW7dZJvqldVkjMjLqZzop842mqZ+2pNM2j82i9czXpCP
XrFsVOwA+fWaY2v/7iRi+pH1Ga2HSjodsJnWQ8wHM1lFaD3zi1R4alZWU4/q
/gjSeojkl5PXoIcRa6uB8xQNu5/i74QiY2ZC/qZ+3Fyct+/PeiX83ZZ1qoGQ
D1cqv8VlVUZiZTyMGxYMUP6VxOqkXxqxSAmaqTiTQdJVRS/fjR6g7pcMvDTy
ziCsq/atnyb0klxJLC+zChkgcvHL2t+NJ5FV6y/qrHzZT1zikqKVvOl7g57U
ow0LokhJlP+S0UA63oHcvoUsBdRSZeLRwhtNphetcTZzHSD3X5hUbAp+RQVq
mNlnbn9EiisSrtvn9lOz71e5+5ytomYHds18tfcx4V1U69HoT+f7ihOy6uP5
lO+NQBleq6dke6CVkKzDAOWi2nj/681X1N5FIbI+7MmkOK62gbaD/L44tgl2
DS4dC4U9rYyQ9a9YCsg2/RMLYJdH2/FHsOfQxGm5zcGvCBnKPwK7Ds3kOAl7
XvU/D6DtIf4aXhdoe8iLuTZWsGewntWFtodwbuuJp+0hfuU2i2GPd1PCQtoe
smDZnWLaHnL+CxGGPfPVT2vRdlDnoqVSYdeteR4hsOeL5bJ5tB1U9vEtj2DX
6izRx7DntqSsPW0HJXxv2y7YxWlt4AF7js2WfAA7lGsfXgFODdaKSrBntfDP
NNgxkhN8Ejit/Z4uBXvKnfQWDdN25M1MEgBOg85SOrDHJk1LLigwh3gs+vab
N52u69TMiRjbVLKZh+s3H28T4ZbfE7TnVy/5rvo0eTQ8iuzJzpC8u6aa7rPb
bwZ49RO2YBM34vqANHt+2RM63EtqWxV2Z3A1ET+pQrknh+NJdmONJodHP/G8
eeWbp0w14Tqx95LV9SfER8MnitZL9fM5vsU52v8pPof+tpsD92i9VPAp8Z93
6HNW2Sqdhn55WcdF0Hs0fO0h+hzqDMeJd/G0fvUlTwRP03rPZpmr0edQT/ez
h0G/4ylWDm6rMqouvXYH+Dz/wPsD4PPpZZtsFGYyqBMtmwPAZ43kM0Xg85IW
knlPKJeUjp8NuZ0wQHUPuYqxyqYTn+hLvmE2FDXQSl+zbg9QZwc+5Pt4ZxFh
dTu/cZ5aau7ptpy0Bf1U57Pu5KHgdBL7K3nx2k1vqDj99Y9bpg9Qlfsd9NKo
Z2Qux6J3J4rbidNcY+MerS6yzHBRc41bLPEfeyQuJ9FDjpR8mjnvSwvJEa/+
YtgWSdSGucy2jw0QpzHxeW2jkar7PWfs3bI7ktgZsS8o7+klNuoGt3YYNJEK
Vz9leeX75Fj+mmgZWp6/+oMuf06EKv8Tvp6ggMj/89+DVP9U1H37c4D0q13K
3h8TpTq4Rqn/h8NDotoiWx42NEACnGoVONofqa7/pNlbYJhAKk49MbpJDZBQ
e5XPBanpqi0FL94ETX9BOv3zWFhY0hj3//n/5R6TjtYbZrRTrLm//VI3dJFL
ZOJZk1sa2dzEcV1qSQ9VZvci8F1nC9EoMr9s5xVHuq0FYA+V4efxGfaMO+iJ
/qTt+Wz/rOtPdy/VJvmz7e6OJtIVHpPOq/2ALOiUgL/U29/bLeDvi1m72O/R
/v5f/x7EY8Fc4ElZ9DpwAc8T9QcNgOfeneSDwa8BarlCX/ye5bGq00JV58XE
RZOt0wKyTLvo+0vN6trT+56p7o9xkPc/mkoeTr+kO6u0ieT3/1QQLu8lv40P
bhiTjCTsF6Ncfv9uJzF3uTcYi3WR1+YqDK3t4cSP9/gHanEXUeRZnlLD3kHK
NPjMZJJDSY2SbuOf4S5yZO0M9yLWdhLsduwdz6lwci0qJOGAUBdh7IsJvcLW
QW5ICb+NmBtFmj/VsHOOt5MsjWmhfsJdJDc0bA9jZQwJE7I7zZbfRIVbrHXy
Kewl6dbXak6yJZBrHUEstDx1jzy9D3nN9OmmkP9xSj6T1k9tuXX5OvRnp/m+
hv5zSxfU0/ZQHpdfnoI9m2/8qoc9qlH81bT91AXHVRTs165Uc4b947lxHrS/
lOOwnyL8nePnlAl/VRrqX6260kRtK+37FNXcSzYPunuarIsk3Hu11vOO1hEN
ge6laQ19xGXXFpYh7/vkwzwHo7QDraRIUta9V+YL8dY3X9+uGUZs7U31m+M7
CKeSPgf7pc+kJrtyrPlDKJlI0t3VEdZJOnjnH8Zq///Q9ebhWHXf/zhSqUwR
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
YLzS7tPdMN6o9IkiyI/J5TvT0Ad93ThIFOSH16OnHOTEWyjrNCEn+A7/6dsg
Jzil9j/P3cnnWrt3/yfe1yLjfdb7I9R/w6GN2xjku6ykDTVedLGGvs7+5WM9
0Nd59GnBf+5xwsh7nOJVVGz/fh5OPr8/5f2fuHWWPL+n2+6W/g2H1oTvLQ3g
K+b+gTcrnzzqBvSs0TC8BPgq9BUv64Ge7ojw/9Q3ypD1jXrMPf95vpd8fh/7
/acu9DgZJ9I2nCz9G77r7tzlfiCfFpeD9xPyhnck0QiBvFn530wDnNVqEmc1
j8RZtRHQ8gH5VPgeogjjvXUtKOPXiQtU/HtfvMl9uZn/kBKnUJNxigYZp1x7
vO/X33BQF7p+4wId6O7ghr7Llu7fuED3zEMu/RtfVILEFxXU/o2rc9Xr2Rfo
Dx0M/Y2rk8b1u2/0uvnPUMDbMcv93Td6t82c62/4ltsnfvd7Oj8L1QU8oiMT
v/s95eSz/6PHhEh9NW7n9J88ZxuZ5ww9d3/53/Aejw2m2sB5WW01XEzIP1qk
72oG+bdVP18K58WOxGm8SeI0Nly+rAvnZYT+Wz2MNz+vNATj/4eveIysy1Im
67JmyfqcU2R9zlOyPsfZ/fY4ofewWdbKg6An23/eWi1G6L1TdinG/8b3W0fi
++X7Nhf8DU8v4YNKwyrHcUSvov/g0bY6HK8yVDNRno9cQxPe2AWPY6dU114a
uTos/pnh+9zlNMS+nOvJmZZ2ZH4oSW5IcRQZXs6kSnctQnKLppMCgV/Q8biF
O8h6BL1YJ5zGy0DEbVeSVtbTt6F7eRpWrZWj+EyVbvdHtXxE39e26aJlC/rF
qbHwYdcYph2X2vuTNgexNlGr8q7qQExVfgK1dqO4cmwDHfSHJrEWHYv48gW5
9wvmdCWO4MwivsIysVSUIlJATzzHwv11VcRz4pxLlcBzq6TPQi84mtCNXrpj
gD/w/EubJuAPsIYm2QfbjaNOzWv+c7fqsUBQUc2u8qh/8OVu/tEf8dm5N6rJ
ehyvuLZ/latrPWbUr+S6zZb0D47cnT/6HabJev45ld/1/A/Iev7/1fkz/FHn
37V5xvL08Bd003DGVvnVCHq5xz5DrzMStZH1/x1k/f+9P/DQXEk8NCYSDy3h
xf7onT1fEPNIbLNQ6gj+Yaojfc8hEfHPhf+nrqCLrCu49+b9f573kM9n+TpO
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
UWdmj9FKVcTdHod/fIi6dBPDVlqhTl2CVnUI4n06r8bxIp6ofHwK4olUc5O3
L+KD2uFyaognOtmO1ENr+iZ7A/HEDKNHaognLihZ0Yz+qoPfPdE/+2W3IeJ9
dyZIy+C7lcNL1+K7v9mGMlGn8/hvu8uob1MincGq16kwx/I56uFNkRKVRX28
ghtHLqF+Fp/ymhTUbxN+ZC2MemXXlUM0UEesnsXH8P/4GUoIP0Ne/d8+1Btb
VD7Ig/4BElwy6O+YctMRdW60VlXcxXfbf64NwHe3iQ9fBM8vu8+qleD9nR/Z
8gh45Mw4QSnwVnj3NjwHj0XnhDXJwGU3assJgD/iuBmfIPgkzrx7xuKR2Ooy
gW3j4lYqYmvXI/A6ZD3XTQOfw3fJyHnghWx5mOQNnkgTE80Z4B+TK/jQCv6O
SXHP+jttGD08Y2QHHg/X3m2e4AtWf9HGB9y2Row4i2dYzWGbCPgvZklrrwbu
fKZhWgfw44enJ00CD8X9zAd3gY939C7zAM59/8eLE8EToR+2egi4/B2CZpeB
x3eN0d0PnoVUueo/FfqfKd7aMHHwLSi6r224U1JLrRnnFQ3eO6Mrjv3gndNf
98Y2oqSW3m3Oz4X2kxJOLmi/vWPZJvCsrdd8JwoeiB1LvI0xjma49CTg/21i
W7vw3aiZR33w3W+i2yYCh5/aU/wI85TZ9+YE5ikeNgE8IDTvV0cJ/K5EmQO5
+F2leu8OAE8eZaI0E3IQV2pMgxwEz18oBs+Lt92NCeBZGUz5cARyK4iJjgau
bL/2ONNxu321NIY63YEvmz/+Div/Pp0j94Whukvm4l1nMpGHv++DMotnpHno
48orZvu1sgV2KLFw+qSu35Y1ugaou2dF6vqt3lnKyi9/oSUc4/5haaaz+LXL
yLNddzGWhZNJiF+7XLjyeKbnkdOmyKtPyP45f0prK8X9+dSLzz/vaTmZqIvZ
5jVQMtUxq4DntFM4ehXtRwrKfgHXGXJ9dQHy8s1/Z7hjnPh7l2IxjuaAKSuv
l/2Bsi++234mzgbfHa0PeOzFMmPM8yKpD6i4XoLFO2C3jH8jfpdzo48Gftc7
gou46/KwCnIQ2DqCj5Cjtt0FTlJmcn0J5NbzfNZMNkZu+/Z+hpyp5Lu6PODX
cc66zuKxETmuEwD91Erb3p7t8Zk5xyNZeP8X0/ax9DPjxiToJ32zOJaln6/9
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
r/z/AAAVwUY=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageMargins->{{97.44921875, 0.}, {0., 5.86328125}},
  ImageSize->{499.71806681012293`, 413.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{-Pi, Pi}, {-Pi, Pi}, {0., 
     88.99999999999228}}, {{-3.141592653589793, 
    3.141592653589793}, {-3.141592653589793, 3.141592653589793}, {0., 
    88.99999999999228}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.807075546752061, -0.7093932637272222, -1.7513103871687294`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.743542413432122*^9, 3.7435425122842607`*^9, 
  3.743542734349518*^9, 3.743548707497508*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"DetReal", "[", 
    RowBox[{"kx", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"kx", ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.743542425872386*^9, 3.7435424333951387`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{-Pi, Pi}, {0., 28.999999999999822`}}, {{-3.141592653589793, 
    3.141592653589793}, {0., 28.999999999999822`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.743542434394986*^9, 3.7435425129488707`*^9, 
  3.7435427344923267`*^9, 3.743548707776936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"DetReal", "[", 
    RowBox[{"kx", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"kx", ",", "0", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7435240674875526`*^9, 3.7435240959670687`*^9}, {
  3.7435424534500427`*^9, 3.743542463774253*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["kx", "2"]}], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["kx", "4"]}], "4"], "-", 
   FractionBox[
    RowBox[{"19", " ", 
     SuperscriptBox["kx", "6"]}], "120"], "+", 
   FractionBox[
    RowBox[{"83", " ", 
     SuperscriptBox["kx", "8"]}], "6720"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "kx", "]"}], "9"],
    SeriesData[$CellContext`kx, 0, {}, 0, 9, 1],
    Editable->False]}],
  SeriesData[$CellContext`kx, 0, {1, 0, 3, 0, 
    Rational[3, 4], 0, 
    Rational[-19, 120], 0, 
    Rational[83, 6720]}, 0, 9, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.743542009444669*^9, 3.74354246452564*^9, 
  3.743542513016286*^9, 3.743542734556593*^9, 3.7435487078618717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DetReal8", "[", 
   RowBox[{"kx_", ",", "ky_"}], "]"}], " ", "=", "  ", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"DetReal", "[", 
     RowBox[{"kx", ",", "ky"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"kx", ",", "0", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ky", ",", "0", ",", "8"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7435426329463997`*^9, 3.743542656054676*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"(", 
    InterpretationBox[
     RowBox[{"1", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["ky", "2"]}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["ky", "4"]}], "4"], "-", 
      FractionBox[
       RowBox[{"19", " ", 
        SuperscriptBox["ky", "6"]}], "120"], "+", 
      FractionBox[
       RowBox[{"83", " ", 
        SuperscriptBox["ky", "8"]}], "6720"], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", "ky", "]"}], "9"],
       SeriesData[$CellContext`ky, 0, {}, 0, 9, 1],
       Editable->False]}],
     SeriesData[$CellContext`ky, 0, {1, 0, 3, 0, 
       Rational[3, 4], 0, 
       Rational[-19, 120], 0, 
       Rational[83, 6720]}, 0, 9, 1],
     Editable->False], ")"}], "+", 
   RowBox[{
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"3", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["ky", "2"]}], "-", 
       FractionBox[
        SuperscriptBox["ky", "4"], "6"], "+", 
       FractionBox[
        SuperscriptBox["ky", "6"], "180"], "-", 
       FractionBox[
        SuperscriptBox["ky", "8"], "10080"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "ky", "]"}], "9"],
        SeriesData[$CellContext`ky, 0, {}, 0, 9, 1],
        Editable->False]}],
      SeriesData[$CellContext`ky, 0, {3, 0, 2, 0, 
        Rational[-1, 6], 0, 
        Rational[1, 180], 0, 
        Rational[-1, 10080]}, 0, 9, 1],
      Editable->False], ")"}], " ", 
    SuperscriptBox["kx", "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{
       FractionBox["3", "4"], "-", 
       FractionBox[
        SuperscriptBox["ky", "2"], "6"], "+", 
       FractionBox[
        SuperscriptBox["ky", "4"], "72"], "-", 
       FractionBox[
        SuperscriptBox["ky", "6"], "2160"], "+", 
       FractionBox[
        SuperscriptBox["ky", "8"], "120960"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "ky", "]"}], "9"],
        SeriesData[$CellContext`ky, 0, {}, 0, 9, 1],
        Editable->False]}],
      SeriesData[$CellContext`ky, 0, {
        Rational[3, 4], 0, 
        Rational[-1, 6], 0, 
        Rational[1, 72], 0, 
        Rational[-1, 2160], 0, 
        Rational[1, 120960]}, 0, 9, 1],
      Editable->False], ")"}], " ", 
    SuperscriptBox["kx", "4"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{
       RowBox[{"-", 
        FractionBox["19", "120"]}], "+", 
       FractionBox[
        SuperscriptBox["ky", "2"], "180"], "-", 
       FractionBox[
        SuperscriptBox["ky", "4"], "2160"], "+", 
       FractionBox[
        SuperscriptBox["ky", "6"], "64800"], "-", 
       FractionBox[
        SuperscriptBox["ky", "8"], "3628800"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "ky", "]"}], "9"],
        SeriesData[$CellContext`ky, 0, {}, 0, 9, 1],
        Editable->False]}],
      SeriesData[$CellContext`ky, 0, {
        Rational[-19, 120], 0, 
        Rational[1, 180], 0, 
        Rational[-1, 2160], 0, 
        Rational[1, 64800], 0, 
        Rational[-1, 3628800]}, 0, 9, 1],
      Editable->False], ")"}], " ", 
    SuperscriptBox["kx", "6"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{
       FractionBox["83", "6720"], "-", 
       FractionBox[
        SuperscriptBox["ky", "2"], "10080"], "+", 
       FractionBox[
        SuperscriptBox["ky", "4"], "120960"], "-", 
       FractionBox[
        SuperscriptBox["ky", "6"], "3628800"], "+", 
       FractionBox[
        SuperscriptBox["ky", "8"], "203212800"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "ky", "]"}], "9"],
        SeriesData[$CellContext`ky, 0, {}, 0, 9, 1],
        Editable->False]}],
      SeriesData[$CellContext`ky, 0, {
        Rational[83, 6720], 0, 
        Rational[-1, 10080], 0, 
        Rational[1, 120960], 0, 
        Rational[-1, 3628800], 0, 
        Rational[1, 203212800]}, 0, 9, 1],
      Editable->False], ")"}], " ", 
    SuperscriptBox["kx", "8"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "kx", "]"}], "9"],
    SeriesData[$CellContext`kx, 0, {}, 0, 9, 1],
    Editable->False]}],
  SeriesData[$CellContext`kx, 0, {
    SeriesData[$CellContext`ky, 0, {1, 0, 3, 0, 
      Rational[3, 4], 0, 
      Rational[-19, 120], 0, 
      Rational[83, 6720]}, 0, 9, 1], 0, 
    SeriesData[$CellContext`ky, 0, {3, 0, 2, 0, 
      Rational[-1, 6], 0, 
      Rational[1, 180], 0, 
      Rational[-1, 10080]}, 0, 9, 1], 0, 
    SeriesData[$CellContext`ky, 0, {
      Rational[3, 4], 0, 
      Rational[-1, 6], 0, 
      Rational[1, 72], 0, 
      Rational[-1, 2160], 0, 
      Rational[1, 120960]}, 0, 9, 1], 0, 
    SeriesData[$CellContext`ky, 0, {
      Rational[-19, 120], 0, 
      Rational[1, 180], 0, 
      Rational[-1, 2160], 0, 
      Rational[1, 64800], 0, 
      Rational[-1, 3628800]}, 0, 9, 1], 0, 
    SeriesData[$CellContext`ky, 0, {
      Rational[83, 6720], 0, 
      Rational[-1, 10080], 0, 
      Rational[1, 120960], 0, 
      Rational[-1, 3628800], 0, 
      Rational[1, 203212800]}, 0, 9, 1]}, 0, 9, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.743542671173285*^9, 3.743542734954956*^9, 
  3.7435487081623087`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"GmatrixH", "[", 
    RowBox[{"kx", ",", "ky"}], "]"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.743547701645277*^9, 3.743547715106154*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "kx", "]"}], " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "kx", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", "ky", "]"}], " ", 
       RowBox[{"Sin", "[", "kx", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", "kx", "]"}], " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "kx", "]"}], " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}]}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "kx", "]"}], " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "kx", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", "ky", "]"}], " ", 
       RowBox[{"Sin", "[", "kx", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", "kx", "]"}], " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "kx", "]"}], " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}]}], ",", 
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}], ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", 
     RowBox[{"3", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "kx", "]"}], " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "kx", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", "ky", "]"}], " ", 
       RowBox[{"Sin", "[", "kx", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", "kx", "]"}], " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "kx", "]"}], " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "kx", "]"}], "+", 
      RowBox[{"Cos", "[", "ky", "]"}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "kx", "]"}], " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "kx", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", "ky", "]"}], " ", 
       RowBox[{"Sin", "[", "kx", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", "kx", "]"}], " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "kx", "]"}], " ", 
       RowBox[{"Sin", "[", "ky", "]"}]}]}], ",", 
     RowBox[{"3", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7435477159610357`*^9, 3.743548708268682*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Meff", "[", 
   RowBox[{"kx_", ",", "ky_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{"Expand", "[", 
          RowBox[{"GmatrixH", "[", 
           RowBox[{"kx", ",", "ky"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{"Expand", "[", 
          RowBox[{"GmatrixH", "[", 
           RowBox[{"kx", ",", "ky"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{"Expand", "[", 
          RowBox[{"GmatrixH", "[", 
           RowBox[{"kx", ",", "ky"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{"Expand", "[", 
          RowBox[{"GmatrixH", "[", 
           RowBox[{"kx", ",", "ky"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " "}]], "Input",
 CellChangeTimes->{{3.743547727219903*^9, 3.743547797527767*^9}, {
  3.743547836423346*^9, 3.743547973476635*^9}, {3.743548043571907*^9, 
  3.74354807533053*^9}, {3.743548151078788*^9, 3.743548152988955*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Det", "[", 
   RowBox[{"Expand", "[", 
    RowBox[{"GmatrixH", "[", 
     RowBox[{"kx", ",", "ky"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.743548688472735*^9, 3.743548689375742*^9}}],

Cell[BoxData[
 RowBox[{"33", "+", 
  RowBox[{"2", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "kx"}], "]"}]}], "-", 
  RowBox[{"22", " ", 
   RowBox[{"Cos", "[", "ky", "]"}]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", "kx", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "22"}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"Cos", "[", "ky", "]"}]}]}], ")"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "ky"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.743548683275433*^9, 3.7435487084294147`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nem", "[", 
   RowBox[{"kx_", ",", "ky_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{"Expand", "[", 
     RowBox[{"GmatrixH", "[", 
      RowBox[{"kx", ",", "ky"}], "]"}], "]"}], "]"}], " ", "*", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Det", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{"GmatrixH", "[", 
       RowBox[{"kx", ",", "ky"}], "]"}], "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.743548090886013*^9, 3.74354812625626*^9}, {
   3.743548584442398*^9, 3.743548599275236*^9}, 3.74354869319306*^9, 
   3.7435487315889463`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MeffNum", "[", 
   RowBox[{"kx_", ",", "ky_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Nem", "[", 
         RowBox[{"kx", ",", "ky"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Nem", "[", 
         RowBox[{"kx", ",", "ky"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Nem", "[", 
         RowBox[{"kx", ",", "ky"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Nem", "[", 
         RowBox[{"kx", ",", "ky"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], " "}]], "Input",
 CellChangeTimes->{{3.743548157014537*^9, 3.743548218147505*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"MeffNum", "[", 
   RowBox[{"kx", ",", "ky"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.743548318191464*^9, 3.743548319926045*^9}, {
  3.743548442117695*^9, 3.7435484501174707`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"18", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "kx", "]"}], "2"]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "kx"}], "]"}], "-", 
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "kx", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "ky", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "8"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"Cos", "[", "kx", "]"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["kx", "2"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"kx", "-", "ky"}], "2"], "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"kx", "-", "ky"}], "2"], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["ky", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "8"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"Cos", "[", "kx", "]"}], "+", 
        RowBox[{"Cos", "[", "ky", "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["kx", "2"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"kx", "-", "ky"}], "2"], "]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"kx", "-", "ky"}], "2"], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["ky", "2"], "]"}]}], ",", 
     RowBox[{"19", "-", 
      RowBox[{"18", " ", 
       RowBox[{"Cos", "[", "ky", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "kx", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", "ky", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "ky"}], "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.743548320889772*^9, 3.743548451602276*^9, 
  3.743548709228734*^9, 3.743548757490178*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "%101", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"18", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "kx", "]"}], "2"]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "kx"}], "]"}], "-", 
       RowBox[{"6", " ", 
        RowBox[{"Cos", "[", "ky", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "kx", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "9"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", "ky", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", "8"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "+", 
         RowBox[{"Cos", "[", "ky", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["kx", "2"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"kx", "-", "ky"}], "2"], "]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"kx", "-", "ky"}], "2"], "]"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["ky", "2"], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "8"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"Cos", "[", "kx", "]"}], "+", 
         RowBox[{"Cos", "[", "ky", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["kx", "2"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"kx", "-", "ky"}], "2"], "]"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"kx", "-", "ky"}], "2"], "]"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["ky", "2"], "]"}]}], 
      RowBox[{"19", "-", 
       RowBox[{"18", " ", 
        RowBox[{"Cos", "[", "ky", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "kx", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"Cos", "[", "ky", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "ky"}], "]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.743548761959939*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "%102", "]"}]], "Input",
 CellChangeTimes->{{3.743548841805463*^9, 3.743548845739546*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"5", "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "kx", "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "ky", "]"}]}]}], ",", 
   RowBox[{"33", "-", 
    RowBox[{"22", " ", 
     RowBox[{"Cos", "[", "kx", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "kx"}], "]"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"kx", "-", "ky"}], "]"}]}], "-", 
    RowBox[{"22", " ", 
     RowBox[{"Cos", "[", "ky", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "ky"}], "]"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"kx", "+", "ky"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.743548788370311*^9, 3.743548848196519*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"MeffNum", "[", 
   RowBox[{"0", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.743548908368808*^9, 3.743548923606599*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.743548924886251*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvectors", "[", 
  RowBox[{"MeffNum", "[", 
   RowBox[{"0", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.743548941345446*^9, 3.743548964056203*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7435489647424603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvectors", "[", 
   RowBox[{"MeffNum", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.74354897434404*^9, 3.743548981094076*^9}, {
  3.743549021214642*^9, 3.743549033500373*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.5403023058681398`"}], "-", 
      RowBox[{"0.8414709848078962`", " ", "\[ImaginaryI]"}]}], ",", "1.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.5403023058681402`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.841470984807897`", " ", "\[ImaginaryI]"}]}], ",", "1.`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.743549025816276*^9, 3.743549034364106*^9}}]
}, Open  ]]
},
WindowSize->{1256, 842},
WindowMargins->{{64, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 6, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 983, 18, 250, "Input"],
Cell[CellGroupData[{
Cell[1566, 42, 739, 19, 63, "Input"],
Cell[2308, 63, 628, 12, 33, "Output"],
Cell[2939, 77, 646, 13, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3622, 95, 1566, 38, 80, "Input"],
Cell[5191, 135, 817, 20, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6045, 160, 2319, 43, 89, "Input"],
Cell[8367, 205, 563, 16, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8967, 226, 89, 2, 28, "Input"],
Cell[9059, 230, 842, 25, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9938, 260, 531, 13, 28, "Input"],
Cell[10472, 275, 482, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10991, 292, 1127, 27, 63, "Input"],
Cell[12121, 321, 1025, 28, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13183, 354, 824, 22, 46, "Input"],
Cell[14010, 378, 1842, 48, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15889, 431, 1220, 41, 36, "Input"],
Cell[17112, 474, 1670, 48, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18819, 527, 667, 18, 28, "Input"],
Cell[19489, 547, 1949, 53, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21475, 605, 415, 10, 28, "Input"],
Cell[21893, 617, 2063, 57, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23993, 679, 342, 9, 28, "Input"],
Cell[24338, 690, 1482, 39, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25857, 734, 545, 16, 28, "Input"],
Cell[26405, 752, 2820, 84, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29262, 841, 366, 9, 28, "Input"],
Cell[29631, 852, 2928, 87, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32596, 944, 316, 8, 28, "Input"],
Cell[32915, 954, 13183, 403, 261, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46135, 1362, 409, 12, 28, "Input"],
Cell[46547, 1376, 144150, 2371, 434, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190734, 3752, 292, 8, 28, "Input"],
Cell[191029, 3762, 10382, 182, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201448, 3949, 324, 8, 28, "Input"],
Cell[201775, 3959, 833, 25, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202645, 3989, 446, 12, 28, "Input"],
Cell[203094, 4003, 5359, 163, 133, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208490, 4171, 206, 5, 28, "Input"],
Cell[208699, 4178, 3987, 107, 80, "Output"]
}, Open  ]],
Cell[212701, 4288, 1598, 44, 46, "Input"],
Cell[CellGroupData[{
Cell[214324, 4336, 256, 6, 28, "Input"],
Cell[214583, 4344, 552, 17, 28, "Output"]
}, Open  ]],
Cell[215150, 4364, 620, 16, 28, "Input"],
Cell[215773, 4382, 1102, 34, 28, "Input"],
Cell[CellGroupData[{
Cell[216900, 4420, 238, 5, 28, "Input"],
Cell[217141, 4427, 2511, 76, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219689, 4508, 87, 2, 28, "Input"],
Cell[219779, 4512, 2924, 86, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222740, 4603, 154, 3, 28, "Input"],
Cell[222897, 4608, 830, 25, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223764, 4638, 188, 4, 28, "Input"],
Cell[223955, 4644, 115, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224107, 4652, 189, 4, 28, "Input"],
Cell[224299, 4658, 215, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224551, 4670, 284, 7, 28, "Input"],
Cell[224838, 4679, 494, 14, 28, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
